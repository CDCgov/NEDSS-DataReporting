spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer

    input:
      topic-name: ${INPUT_TOPIC_ORGANIZATION:nbs_Organization}
      topic-name-place: ${INPUT_TOPIC_PLACE:nbs_Place}
    output:
      organizationElastic:
        topic-name: ${PROVIDER_ELASTIC:elastic_search_organization}
      organizationReporting:
        topic-name: ${ORGANIZATION_REPORTING:nrt_organization}
      placeReporting:
        topic-name: nrt_place
    dlq:
      retry-suffix: _retry
      dlq-suffix: _dlt


    group-id: ${KAFKA_CONSUMER_APP:organization-reporting-consumer-app}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      max-retry: 3
      maxPollIntervalMs: 30000
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    admin:
      auto-create: true
  application:
    name: organization-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    url: ${DB_ODSE_URL:jdbc:sqlserver://localhost:1433;databaseName=:NBS_ODSE;encrypt=true;trustServerCertificate=true;}
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
server:
  port: '8092'
