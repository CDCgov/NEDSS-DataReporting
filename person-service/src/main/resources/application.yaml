spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
      key-serializer: org.springframework.kafka.support.serializer.StringOrBytesSerializer
    input:
      topic-name: ${INPUT_TOPIC_PERSON:nbs_Person}
      topic-name-user: ${INPUT_TOPIC_USER:nbs_Auth_user}
    output:
      providerElastic:
        topic-name: ${PROVIDER_ELASTIC:elastic_search_provider}
      providerReporting:
        topic-name: ${PROVIDER_REPORTING:nrt_provider}
      patientElastic:
        topic-name: ${PATIENT_ELASTIC:elastic_search_patient}
      patientReporting:
        topic-name: ${PATIENT_REPORTING:nrt_patient}
      userReporting:
        topic-name: ${USER_REPORTING:nrt_auth_user}
    dlq:
      retry-suffix: _retry
      dlq-suffix: _dlt

    group-id: ${KAFKA_CONSUMER_APP:person-reporting-consumer-app}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      max-retry: 3
      maxPollIntervalMs: 30000
      maxPollRecs: 200
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    admin:
      auto-create: true
  application:
    name: person-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    url: ${DB_ODSE_URL:jdbc:sqlserver://localhost:1433;databaseName=:NBS_ODSE;encrypt=true;trustServerCertificate=true;}
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
featureFlag:
  elastic-search-enable: ${FF_ES_ENABLE:false}
  phc-datamart-disable: ${FF_PHC_DM_DISABLE:false}
server:
  port: '8091'

management:
  endpoint:
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true