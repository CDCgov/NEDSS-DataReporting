spring:
  kafka:
    input:
      topic-name-phc: nbs_Public_health_case
      topic-name-ntf: nbs_Notification
      topic-name-int: nbs_Interview
      topic-name-ctr: nbs_CT_contact
      topic-name-vac: nbs_Intervention
      topic-name-tmt: nbs_Treatment
      topic-name-ar: nbs_Act_relationship
    output:
      topic-name-reporting: nrt_investigation
      topic-name-confirmation: nrt_investigation_confirmation
      topic-name-observation: nrt_investigation_observation
      topic-name-notifications: nrt_investigation_notification
      topic-name-page-case-answer: nrt_page_case_answer
      topic-name-aggregate: nrt_investigation_aggregate
      topic-name-case-management: nrt_investigation_case_management
      topic-name-interview: nrt_interview
      topic-name-interview-answer: nrt_interview_answer
      topic-name-interview-note: nrt_interview_note
      topic-name-rdb-metadata-columns: nrt_metadata_columns
      topic-name-contact: nrt_contact
      topic-name-contact-answer: nrt_contact_answer
      topic-name-vaccination: nrt_vaccination
      topic-name-vaccination-answer: nrt_vaccination_answer
      topic-name-treatment: nrt_treatment
    dlq:
      retry-suffix: _retry
      dlq-suffix: _dlt

    group-id: ${KAFKA_CONSUMER_APP:investigation-reporting-consumer-app}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      max-retry: 3
      maxPollIntervalMs: 300000
      maxPollRecs: ${KAFKA_CONSUMER_MAX_POLL_RECS:200}
      enable-auto-commit: false
    admin:
      auto-create: true
  application:
    name: investigation-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    url: ${DB_ODSE_URL:jdbc:sqlserver://${DB_SERVER:localhost:1433};databaseName=:NBS_ODSE;encrypt=true;trustServerCertificate=true;}
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
featureFlag:
  phc-datamart-disable: ${FF_PHC_DM_DISABLE:false}
server:
  port: '8093'

management:
  endpoint:
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true