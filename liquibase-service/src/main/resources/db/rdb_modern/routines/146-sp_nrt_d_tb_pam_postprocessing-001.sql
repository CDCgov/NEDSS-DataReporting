CREATE OR ALTER PROCEDURE [dbo].[sp_nrt_d_tb_pam_postprocessing]
    @phc_id_list nvarchar(max),
    @debug bit = 'false'
AS

BEGIN

	DECLARE @batch_id BIGINT;
    SET @batch_id = cast((format(getdate(),'yyyyMMddHHmmss')) AS BIGINT);
    PRINT @batch_id;
    DECLARE @RowCount_no INT;
    DECLARE @Proc_Step_no FLOAT= 0;
    DECLARE @Proc_Step_Name VARCHAR(200)= '';
	DECLARE @Dataflow_Name VARCHAR(200) = 'D_TB_PAM Post-Processing Event';
	DECLARE @Package_Name VARCHAR(200) = 'sp_nrt_d_tb_pam_postprocessing';


BEGIN TRY

	SET @Proc_Step_Name = 'SP_Start';


	BEGIN TRANSACTION;

        INSERT INTO dbo.job_flow_log ( batch_id
                                     , [Dataflow_Name]
                                     , [package_Name]
                                     , [Status_Type]
                                     , [step_number]
                                     , [step_name]
                                     , [row_count]
                                     , [Msg_Description1])
        VALUES ( @batch_id
               , @Dataflow_Name
			   , @Package_Name
               , 'START'
               , @Proc_Step_no
               , @Proc_Step_Name
               , 0
               , LEFT('ID List-' + @phc_id_list, 500));

    COMMIT TRANSACTION;


	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' EXTRACTING TB-PAM DATA';


		/* S_TB_PAM_SET */
		IF OBJECT_ID('tempdb..#S_TB_PAM_SET') IS NOT NULL
					DROP TABLE #S_TB_PAM_SET;

		WITH 
		CTE_INVESTIGATION_BATCH_ID AS (
			SELECT 
				public_health_case_uid,
				batch_id
			FROM [dbo].nrt_investigation I WITH (NOLOCK) 
			INNER JOIN  (SELECT value FROM STRING_SPLIT(@phc_id_list, ',')) nu on nu.value = I.public_health_case_uid  
		),
		CTE_S_TB_PAM_SET AS (				
		SELECT
			CAST(A.ACT_UID AS BIGINT) AS TB_PAM_UID, 
			A.CODE_SET_GROUP_ID, 
			A.DATAMART_COLUMN_NM, 
			A.ANSWER_TXT, 
			A.RECORD_STATUS_CD, 
			A.LAST_CHG_TIME,
			ROW_NUMBER() OVER (PARTITION BY A.ACT_UID, A.CODE_SET_GROUP_ID, A.DATAMART_COLUMN_NM, A.RECORD_STATUS_CD  ORDER BY A.LAST_CHG_TIME DESC) AS rn		
		FROM [dbo].nrt_page_case_answer A WITH (NOLOCK) 
		INNER JOIN CTE_INVESTIGATION_BATCH_ID I on I.public_health_case_uid = A.ACT_UID AND (I.batch_id = A.batch_id OR A.batch_id IS NULL)
		WHERE 
			A.ldf_status_cd IS NULL 
			AND A.nbs_question_uid IS NOT NULL
			AND A.DATAMART_COLUMN_NM IS NOT NULL
			AND A.DATAMART_COLUMN_NM <> 'N/A'
			AND A.data_location = 'NBS_Case_Answer.answer_txt'
			AND A.question_identifier  NOT IN (
			'TUB119', 'TUB129', 'TUB154', 'TUB155', 'TUB156', 'TUB167', 'TUB225', 'TUB228',
			'TUB229', 'TUB230', 'TUB235', 'TUB237', 'TUB114'
			)
        )
		SELECT
			TB_PAM_UID, 
			CODE_SET_GROUP_ID, 
			DATAMART_COLUMN_NM, 
			ANSWER_TXT, 
			RECORD_STATUS_CD, 
			LAST_CHG_TIME
		INTO #S_TB_PAM_SET
		FROM CTE_S_TB_PAM_SET
		WHERE rn = 1;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #S_TB_PAM_SET;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;


	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' JOIN WITH METADATA';

		-- #S_TB_PAM_CODED
		IF OBJECT_ID('tempdb..#S_TB_PAM_CODED') IS NOT NULL
					DROP TABLE #S_TB_PAM_SET;

		SELECT 
			TB.*,
			METADATA.code_set_desc_txt,
			METADATA.code_set_nm,
			METADATA.code_set_short_desc_txt,
			METADATA.ldf_picklist_ind_cd,
			METADATA.phin_std_val_ind,
			METADATA.vads_value_set_code
		INTO #S_TB_PAM_CODED
		FROM #S_TB_PAM_SET TB
		LEFT JOIN [dbo].nrt_srte_codeset_group_metadata METADATA WITH (NOLOCK)
					ON METADATA.CODE_SET_GROUP_ID = TB.CODE_SET_GROUP_ID;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #S_TB_PAM_CODED;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;	

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' TRANSLATE AND ADD CODES';

		-- #S_TB_PAM_SET_TRANSLATED
		IF OBJECT_ID('tempdb..#S_TB_PAM_SET_TRANSLATED') IS NOT NULL
					DROP TABLE #S_TB_PAM_SET_TRANSLATED;

		SELECT 
			TB.CODE_SET_GROUP_ID, 
			TB.TB_PAM_UID, 
			TB.ANSWER_TXT,
			TB.DATAMART_COLUMN_NM,      
			TB.CODE_SET_NM, 
			TB.RECORD_STATUS_CD, 
			CVG.CODE, 
			CVG.CODE_SHORT_DESC_TXT,
			TB.LAST_CHG_TIME
		INTO #S_TB_PAM_SET_TRANSLATED    
		FROM #S_TB_PAM_CODED TB
		LEFT JOIN [dbo].nrt_srte_code_value_general CVG WITH (NOLOCK)
			ON CVG.CODE_SET_NM = TB.CODE_SET_NM
			AND CVG.CODE = TB.ANSWER_TXT;
	
		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #S_TB_PAM_SET_TRANSLATED;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;	


	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' TRANSFORM DATA';

		/* First S_TB_PAM_SET_CVG Transformation (Originally a DATA step) */
		IF OBJECT_ID('tempdb..#S_TB_PAM_SET_CVG_TEMP') IS NOT NULL
					DROP TABLE #S_TB_PAM_SET_CVG_TEMP;

		SELECT 
			TB_PAM_UID, 
			CODE_SET_GROUP_ID, 
			DATAMART_COLUMN_NM, 
			CASE 
				WHEN CODE_SET_GROUP_ID = '' 
					AND CODE_SET_NM NOT IN ('STATE_CCD', 'COUNTY_CCD', 'PSL_CNTRY', 'S_JURDIC_C', 'S_PROGRA_C') 
				THEN ANSWER_TXT
				WHEN CODE_SET_NM NOT IN ('STATE_CCD', 'COUNTY_CCD', 'PSL_CNTRY', 'S_JURDIC_C', 'S_PROGRA_C')
					AND CODE_SET_GROUP_ID NOT IN ('77777')
				THEN CODE_SHORT_DESC_TXT
				ELSE ANSWER_TXT  /* Default case to preserve original value if conditions aren't met */
			END AS ANSWER_TXT, 
			CODE_SET_NM, 
			RECORD_STATUS_CD, 
			LAST_CHG_TIME, 
			CODE, 
			CODE_SHORT_DESC_TXT
		INTO #S_TB_PAM_SET_CVG_TEMP
		FROM #S_TB_PAM_SET_TRANSLATED;

		/* Second S_TB_PAM_SET_CVG (SQL Join with COUNTRY_CODE) */
		IF OBJECT_ID('tempdb..#S_TB_PAM_SET_CVG') IS NOT NULL
					DROP TABLE #S_TB_PAM_SET_CVG;

		SELECT 
			TB.TB_PAM_UID, 
			TB.CODE_SET_GROUP_ID, 
			TB.DATAMART_COLUMN_NM, 
			TB.ANSWER_TXT, 
			TB.CODE_SET_NM, 
			TB.RECORD_STATUS_CD, 
			TB.LAST_CHG_TIME, 
			TB.CODE, 
			CVG.CODE_DESC_TXT AS CODE_DESC_TXT
		INTO #S_TB_PAM_SET_CVG
		FROM #S_TB_PAM_SET_CVG_TEMP TB
		LEFT JOIN [dbo].nrt_srte_country_code CVG
			ON CVG.CODE = TB.ANSWER_TXT
			AND TB.CODE_SET_GROUP_ID = '77777';

		/* Final S_TB_PAM_SET_CVG Transformation (Originally a DATA step) */
		IF OBJECT_ID('tempdb..#S_TB_PAM_SET_CVG_FINAL') IS NOT NULL
			DROP TABLE #S_TB_PAM_SET_CVG_FINAL;

		SELECT 
			TB_PAM_UID, 
			CODE_SET_GROUP_ID, 
			DATAMART_COLUMN_NM, 
			CASE 
				WHEN CODE_SET_GROUP_ID = '77777' THEN CODE_DESC_TXT
				ELSE ANSWER_TXT
			END AS ANSWER_TXT, 
			CODE_SET_NM, 
			RECORD_STATUS_CD, 
			LAST_CHG_TIME, 
			CODE, 
			CODE_DESC_TXT
		INTO #S_TB_PAM_SET_CVG_FINAL
		FROM #S_TB_PAM_SET_CVG
		ORDER BY TB_PAM_UID;  /* Replaces PROC SORT */

		SELECT @RowCount_no = @@ROWCOUNT;
		
		/* S_PAM_CHG_TIME */
		IF OBJECT_ID('tempdb..#S_PAM_CHG_TIME') IS NOT NULL
			DROP TABLE #S_PAM_CHG_TIME;

		SELECT DISTINCT 
			TB_PAM_UID, 
			LAST_CHG_TIME 
		INTO #S_PAM_CHG_TIME
		FROM #S_TB_PAM_SET_CVG_FINAL;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #S_TB_PAM_SET_CVG_FINAL;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;	

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' PIVOT TO CREATE STAGING S_TB_PAM';


		-- Step 1: Pivot S_TB_PAM_SET_CVG to S_TB_PAM1 (Replaces PROC TRANSPOSE)
		IF OBJECT_ID('tempdb..#S_TB_PAM1') IS NOT NULL
					DROP TABLE #S_TB_PAM1;

		SELECT *
		INTO #S_TB_PAM1
		FROM (
			SELECT TB_PAM_UID, DATAMART_COLUMN_NM, ANSWER_TXT
			FROM #S_TB_PAM_SET_CVG
		) AS SourceTable
		PIVOT (
			MAX(ANSWER_TXT) 
			FOR DATAMART_COLUMN_NM IN (
				-- List all possible DATAMART_COLUMN_NM explicitly
				[CALC_DISEASE_SITE], [INIT_SUSCEPT_STREPTOMYCIN], [INIT_SUSCEPT_OTHER_2_IND], 
				[INIT_SUSCEPT_RIFAMPIN], [FINAL_SUSCEPT_OTHER_QUINOLONES], [TST_RESULT], 
				[NONINJECT_DRUG_USE_PAST_YEAR], [INIT_SUSCEPT_ISONIAZID], [INIT_SUSCEPT_RIFABUTIN], 
				[INIT_SUSCEPT_MOXIFLOXACIN], [HIV_STATUS], [COUNT_STATUS], [INIT_REGIMEN_CAPREOMYCIN], 
				[FINAL_SUSCEPT_ETHAMBUTOL], [PRIMARY_GUARD_1_BIRTH_COUNTRY], [FINAL_SUSCEPT_ETHIONAMIDE], 
				[FINAL_SUSCEPT_OTHER_2_IND], [INIT_REGIMEN_MOXIFLOXACIN], [STATUS_AT_DIAGNOSIS], 
				[IGRA_RESULT], [CT_SCAN_MILIARY_EVIDENCE], [INIT_REGIMEN_RIFAPENTINE], 
				[CHEST_XRAY_MILIARY_EVIDENCE], [PRIMARY_REASON_EVALUATED], [CULT_TISSUE_SITE], 
				[SMR_PATH_CYTO_RESULT], [LINK_REASON_2], [MOVED_IND], [CHEST_XRAY_CAVITY_EVIDENCE], 
				[LONGTERM_CARE_FACIL_TY], [NO_CONV_DOC_REASON], [FINAL_SUSCEPT_TESTING], 
				[PREVIOUS_DIAGNOSIS_IND], [INIT_SUSCEPT_OFLOXACIN], [FINAL_SUSCEPT_AMIKACIN], 
				[TB_CAUSE_OF_DEATH], [FINAL_ISOLATE_IS_SPUTUM_IND], [SMR_PATH_CYTO_SITE], 
				[THERAPY_STOP_CAUSE_OF_DEATH], [INIT_REGIMEN_ETHAMBUTOL], [FINAL_SUSCEPT_OFLOXACIN], 
				[INIT_REGIMEN_CYCLOSERINE], [THERAPY_STOP_REASON], [INIT_SUSCEPT_TESTING_DONE], 
				[NAA_RESULT], [HOMELESS_IND], [INIT_SUSCEPT_CIPROFLOXACIN], [INIT_REGIMEN_STREPTOMYCIN], 
				[FINAL_SUSCEPT_OTHER_IND], [LONGTERM_CARE_FACIL_RESIDENT], [SPUTUM_CULTURE_CONV_DOCUMENTED], 
				[NAA_SPEC_NOT_SPUTUM], [INIT_SUSCEPT_ETHIONAMIDE], [INIT_REGIMEN_OFLOXACIN], 
				[IMMIGRATION_STATUS_AT_US_ENTRY], [ISOLATE_SUBMITTED_IND], [FINAL_SUSCEPT_PYRAZINAMIDE], 
				[INIT_SUSCEPT_PYRAZINAMIDE], [INIT_REGIMEN_ETHIONAMIDE], [INIT_SUSCEPT_CYCLOSERINE], 
				[FINAL_SUSCEPT_PA_SALICYLIC_ACI], [PRIMARY_GUARD_2_BIRTH_COUNTRY], [CT_SCAN_RESULT], 
				[NAA_SPEC_IS_SPUTUM_IND], [FINAL_SUSCEPT_KANAMYCIN], [US_BORN_IND], 
				[FINAL_SUSCEPT_ISONIAZID], [INIT_REGIMEN_PYRAZINAMIDE], [SPUTUM_CULTURE_RESULT], 
				[PATIENT_OUTSIDE_US_GT_2_MONTHS], [FIRST_ISOLATE_IS_SPUTUM_IND], [CULT_TISSUE_RESULT_RPT_LAB_TY], 
				[INIT_REGIMEN_CIPROFLOXACIN], [INIT_REGIMEN_AMIKACIN], [INIT_SUSCEPT_OTHER_1_IND], 
				[INIT_SUSCEPT_OTHER_QUNINOLONES], [FINAL_SUSCEPT_CIPROFLOXACIN], [INIT_SUSCEPT_CAPREOMYCIN], 
				[INIT_SUSCEPT_LEVOFLOXACIN], [TRANSNATIONAL_REFERRAL_IND], [INJECT_DRUG_USE_PAST_YEAR], 
				[CASE_VERIFICATION], [INIT_REGIMEN_KANAMYCIN], [FINAL_SUSCEPT_RIFAPENTINE], 
				[FINAL_ISOLATE_NOT_SPUTUM], [CORRECTIONAL_FACIL_CUSTODY_IND], [MOVE_CITY], 
				[CORRECTIONAL_FACIL_TY], [INIT_REGIMEN_RIFAMPIN], [INIT_REGIMEN_PA_SALICYLIC_ACID], 
				[OCCUPATION_RISK], [CULT_TISSUE_RESULT], [INIT_SUSCEPT_PA_SALICYLIC_ACID], 
				[CHEST_XRAY_RESULT], [FIRST_ISOLATE_NOT_SPUTUM], [FINAL_SUSCEPT_CYCLOSERINE], 
				[SPUTUM_CULT_RPT_LAB_TY], [FINAL_SUSCEPT_LEVOFLOXACIN], [NAA_RPT_LAB_TY], 
				[COUNTRY_OF_VERIFIED_CASE], [LINK_REASON_1], [CT_SCAN_CAVITY_EVIDENCE], 
				[INIT_REGIMEN_RIFABUTIN], [INIT_SUSCEPT_RIFAPENTINE], [INIT_REGIMEN_LEVOFLOXACIN], 
				[PATIENT_BIRTH_COUNTRY], [EXCESS_ALCOHOL_USE_PAST_YEAR], [INIT_REGIMEN_OTHER_2_IND], 
				[FINAL_SUSCEPT_CAPREOMYCIN], [FINAL_SUSCEPT_RIFABUTIN], [INIT_SUSCEPT_AMIKACIN], 
				[FINAL_SUSCEPT_RIFAMPIN], [INIT_REGIMEN_OTHER_1_IND], [FINAL_SUSCEPT_STREPTOMYCIN], 
				[INIT_SUSCEPT_KANAMYCIN], [INIT_SUSCEPT_ETHAMBUTOL], [INIT_REGIMEN_ISONIAZID], 
				[SPUTUM_SMEAR_RESULT], [DOT], [CORRECTIONAL_FACIL_RESIDENT], [FINAL_SUSCEPT_MOXIFLOXACIN], 
				[THERAPY_EXTEND_GT_12_OTHER], [LINK_STATE_CASE_NUM_2], [ISOLATE_ACCESSION_NUM], 
				[INIT_SUSCEPT_OTHER_1], [INIT_REGIMEN_OTHER_2], [INIT_REGIMEN_OTHER_1], 
				[OTHER_TB_RISK_FACTORS], [LINK_STATE_CASE_NUM_1], [NO_CONV_DOC_OTHER_REASON], 
				[FINAL_SUSCEPT_OTHER_2], [FINAL_SUSCEPT_OTHER], [MOVE_CITY_2], [HIV_CITY_CNTY_PATIENT_NUM], 
				[IGRA_TEST_TY], [HIV_STATE_PATIENT_NUM], [INIT_SUSCEPT_OTHER_2], [COMMENTS_FOLLOW_UP_1], 
				[COMMENTS_FOLLOW_UP_2], [PROVIDER_OVERRIDE_COMMENTS], [FINAL_ISOLATE_COLLECT_DATE], 
				[DATE_SUBMITTED], [TST_PLACED_DATE], [NAA_COLLECT_DATE], [FIRST_ISOLATE_COLLECT_DATE], 
				[TB_SPUTUM_CULTURE_NEGATIVE_DAT], [SMR_PATH_CYTO_COLLECT_DATE], [CULT_TISSUE_COLLECT_DATE], 
				[NAA_RESULT_RPT_DATE], [DATE_ARRIVED_IN_US], [SPUTUM_SMEAR_COLLECT_DATE], 
				[CULT_TISSUE_RESULT_RPT_DATE], [DATE_OF_DEATH], [COUNT_DATE], [PREVIOUS_DIAGNOSIS_YEAR], 
				[SPUTUM_CULT_COLLECT_DATE], [THERAPY_STOP_DATE], [SPUTUM_CULT_RESULT_RPT_DATE], 
				[INIT_REGIMEN_START_DATE], [IGRA_COLLECT_DATE], [DOT_NUMBER_WEEKS], [TST_MM_INDURATION],
				[DISEASE_SITE], [TB_VERCRIT_CALC_IND] 
			)
		) AS PivotTable;


		-- Step 2: Create S_TB_PAM_TEMP with transformations (Combines DATA S_TB_PAM2 and PROC SQL)
		IF OBJECT_ID('tempdb..#S_TB_PAM_TEMP') IS NOT NULL
					DROP TABLE #S_TB_PAM_TEMP;

		SELECT 
			TB_PAM_UID,
			-- Character columns with length 200 (VARCHAR(200)) in original SAS
			CAST([CALC_DISEASE_SITE] AS VARCHAR(100)) AS CALC_DISEASE_SITE,
			CAST([INIT_SUSCEPT_STREPTOMYCIN] AS VARCHAR(100)) AS INIT_SUSCEPT_STREPTOMYCIN,
			CAST([INIT_SUSCEPT_OTHER_2_IND] AS VARCHAR(100)) AS INIT_SUSCEPT_OTHER_2_IND,
			CAST([INIT_SUSCEPT_RIFAMPIN] AS VARCHAR(100)) AS INIT_SUSCEPT_RIFAMPIN,
			CAST([FINAL_SUSCEPT_OTHER_QUINOLONES] AS VARCHAR(100)) AS FINAL_SUSCEPT_OTHER_QUINOLONES,
			CAST([TST_RESULT] AS VARCHAR(100)) AS TST_RESULT,
			CAST([NONINJECT_DRUG_USE_PAST_YEAR] AS VARCHAR(100)) AS NONINJECT_DRUG_USE_PAST_YEAR,
			CAST([INIT_SUSCEPT_ISONIAZID] AS VARCHAR(100)) AS INIT_SUSCEPT_ISONIAZID,
			CAST([INIT_SUSCEPT_RIFABUTIN] AS VARCHAR(100)) AS INIT_SUSCEPT_RIFABUTIN,
			CAST([INIT_SUSCEPT_MOXIFLOXACIN] AS VARCHAR(100)) AS INIT_SUSCEPT_MOXIFLOXACIN,
			CAST([HIV_STATUS] AS VARCHAR(100)) AS HIV_STATUS,
			CAST([COUNT_STATUS] AS VARCHAR(100)) AS COUNT_STATUS,
			CAST([INIT_REGIMEN_CAPREOMYCIN] AS VARCHAR(100)) AS INIT_REGIMEN_CAPREOMYCIN,
			CAST([FINAL_SUSCEPT_ETHAMBUTOL] AS VARCHAR(100)) AS FINAL_SUSCEPT_ETHAMBUTOL,
			CAST([PRIMARY_GUARD_1_BIRTH_COUNTRY] AS VARCHAR(100)) AS PRIMARY_GUARD_1_BIRTH_COUNTRY,
			CAST([FINAL_SUSCEPT_ETHIONAMIDE] AS VARCHAR(100)) AS FINAL_SUSCEPT_ETHIONAMIDE,
			CAST([FINAL_SUSCEPT_OTHER_2_IND] AS VARCHAR(100)) AS FINAL_SUSCEPT_OTHER_2_IND,
			CAST([INIT_REGIMEN_MOXIFLOXACIN] AS VARCHAR(100)) AS INIT_REGIMEN_MOXIFLOXACIN,
			CAST([STATUS_AT_DIAGNOSIS] AS VARCHAR(100)) AS STATUS_AT_DIAGNOSIS,
			CAST([IGRA_RESULT] AS VARCHAR(100)) AS IGRA_RESULT,
			CAST([CT_SCAN_MILIARY_EVIDENCE] AS VARCHAR(100)) AS CT_SCAN_MILIARY_EVIDENCE,
			CAST([INIT_REGIMEN_RIFAPENTINE] AS VARCHAR(100)) AS INIT_REGIMEN_RIFAPENTINE,
			CAST([CHEST_XRAY_MILIARY_EVIDENCE] AS VARCHAR(100)) AS CHEST_XRAY_MILIARY_EVIDENCE,
			CAST([PRIMARY_REASON_EVALUATED] AS VARCHAR(100)) AS PRIMARY_REASON_EVALUATED,
			CAST([CULT_TISSUE_SITE] AS VARCHAR(100)) AS CULT_TISSUE_SITE,
			CAST([SMR_PATH_CYTO_RESULT] AS VARCHAR(100)) AS SMR_PATH_CYTO_RESULT,
			CAST([LINK_REASON_2] AS VARCHAR(100)) AS LINK_REASON_2,
			CAST([MOVED_IND] AS VARCHAR(100)) AS MOVED_IND,
			CAST([CHEST_XRAY_CAVITY_EVIDENCE] AS VARCHAR(100)) AS CHEST_XRAY_CAVITY_EVIDENCE,
			CAST([LONGTERM_CARE_FACIL_TY] AS VARCHAR(100)) AS LONGTERM_CARE_FACIL_TY,
			CAST([NO_CONV_DOC_REASON] AS VARCHAR(100)) AS NO_CONV_DOC_REASON,
			CAST([FINAL_SUSCEPT_TESTING] AS VARCHAR(100)) AS FINAL_SUSCEPT_TESTING,
			CAST([PREVIOUS_DIAGNOSIS_IND] AS VARCHAR(100)) AS PREVIOUS_DIAGNOSIS_IND,
			CAST([INIT_SUSCEPT_OFLOXACIN] AS VARCHAR(100)) AS INIT_SUSCEPT_OFLOXACIN,
			CAST([FINAL_SUSCEPT_AMIKACIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_AMIKACIN,
			CAST([TB_CAUSE_OF_DEATH] AS VARCHAR(100)) AS TB_CAUSE_OF_DEATH,
			CAST([FINAL_ISOLATE_IS_SPUTUM_IND] AS VARCHAR(100)) AS FINAL_ISOLATE_IS_SPUTUM_IND,
			CAST([SMR_PATH_CYTO_SITE] AS VARCHAR(100)) AS SMR_PATH_CYTO_SITE,
			CAST([THERAPY_STOP_CAUSE_OF_DEATH] AS VARCHAR(100)) AS THERAPY_STOP_CAUSE_OF_DEATH,
			CAST([INIT_REGIMEN_ETHAMBUTOL] AS VARCHAR(100)) AS INIT_REGIMEN_ETHAMBUTOL,
			CAST([FINAL_SUSCEPT_OFLOXACIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_OFLOXACIN,
			CAST([INIT_REGIMEN_CYCLOSERINE] AS VARCHAR(100)) AS INIT_REGIMEN_CYCLOSERINE,
			CAST([THERAPY_STOP_REASON] AS VARCHAR(100)) AS THERAPY_STOP_REASON,
			CAST([INIT_SUSCEPT_TESTING_DONE] AS VARCHAR(100)) AS INIT_SUSCEPT_TESTING_DONE,
			CAST([NAA_RESULT] AS VARCHAR(100)) AS NAA_RESULT,
			CAST([HOMELESS_IND] AS VARCHAR(100)) AS HOMELESS_IND,
			CAST([INIT_SUSCEPT_CIPROFLOXACIN] AS VARCHAR(100)) AS INIT_SUSCEPT_CIPROFLOXACIN,
			CAST([INIT_REGIMEN_STREPTOMYCIN] AS VARCHAR(100)) AS INIT_REGIMEN_STREPTOMYCIN,
			CAST([FINAL_SUSCEPT_OTHER_IND] AS VARCHAR(100)) AS FINAL_SUSCEPT_OTHER_IND,
			CAST([LONGTERM_CARE_FACIL_RESIDENT] AS VARCHAR(100)) AS LONGTERM_CARE_FACIL_RESIDENT,
			CAST([SPUTUM_CULTURE_CONV_DOCUMENTED] AS VARCHAR(100)) AS SPUTUM_CULTURE_CONV_DOCUMENTED,
			CAST([NAA_SPEC_NOT_SPUTUM] AS VARCHAR(100)) AS NAA_SPEC_NOT_SPUTUM,
			CAST([INIT_SUSCEPT_ETHIONAMIDE] AS VARCHAR(100)) AS INIT_SUSCEPT_ETHIONAMIDE,
			CAST([INIT_REGIMEN_OFLOXACIN] AS VARCHAR(100)) AS INIT_REGIMEN_OFLOXACIN,
			CAST([IMMIGRATION_STATUS_AT_US_ENTRY] AS VARCHAR(100)) AS IMMIGRATION_STATUS_AT_US_ENTRY,
			CAST([ISOLATE_SUBMITTED_IND] AS VARCHAR(100)) AS ISOLATE_SUBMITTED_IND,
			CAST([FINAL_SUSCEPT_PYRAZINAMIDE] AS VARCHAR(100)) AS FINAL_SUSCEPT_PYRAZINAMIDE,
			CAST([INIT_SUSCEPT_PYRAZINAMIDE] AS VARCHAR(100)) AS INIT_SUSCEPT_PYRAZINAMIDE,
			CAST([INIT_REGIMEN_ETHIONAMIDE] AS VARCHAR(100)) AS INIT_REGIMEN_ETHIONAMIDE,
			CAST([INIT_SUSCEPT_CYCLOSERINE] AS VARCHAR(100)) AS INIT_SUSCEPT_CYCLOSERINE,
			CAST([FINAL_SUSCEPT_PA_SALICYLIC_ACI] AS VARCHAR(100)) AS FINAL_SUSCEPT_PA_SALICYLIC_ACI,
			CAST([PRIMARY_GUARD_2_BIRTH_COUNTRY] AS VARCHAR(100)) AS PRIMARY_GUARD_2_BIRTH_COUNTRY,
			CAST([CT_SCAN_RESULT] AS VARCHAR(100)) AS CT_SCAN_RESULT,
			CAST([NAA_SPEC_IS_SPUTUM_IND] AS VARCHAR(100)) AS NAA_SPEC_IS_SPUTUM_IND,
			CAST([FINAL_SUSCEPT_KANAMYCIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_KANAMYCIN,
			CAST([US_BORN_IND] AS VARCHAR(100)) AS US_BORN_IND,
			CAST([FINAL_SUSCEPT_ISONIAZID] AS VARCHAR(100)) AS FINAL_SUSCEPT_ISONIAZID,
			CAST([INIT_REGIMEN_PYRAZINAMIDE] AS VARCHAR(100)) AS INIT_REGIMEN_PYRAZINAMIDE,
			CAST([SPUTUM_CULTURE_RESULT] AS VARCHAR(100)) AS SPUTUM_CULTURE_RESULT,
			CAST([PATIENT_OUTSIDE_US_GT_2_MONTHS] AS VARCHAR(100)) AS PATIENT_OUTSIDE_US_GT_2_MONTHS,
			CAST([FIRST_ISOLATE_IS_SPUTUM_IND] AS VARCHAR(100)) AS FIRST_ISOLATE_IS_SPUTUM_IND,
			CAST([CULT_TISSUE_RESULT_RPT_LAB_TY] AS VARCHAR(100)) AS CULT_TISSUE_RESULT_RPT_LAB_TY,
			CAST([INIT_REGIMEN_CIPROFLOXACIN] AS VARCHAR(100)) AS INIT_REGIMEN_CIPROFLOXACIN,
			CAST([INIT_REGIMEN_AMIKACIN] AS VARCHAR(100)) AS INIT_REGIMEN_AMIKACIN,
			CAST([INIT_SUSCEPT_OTHER_1_IND] AS VARCHAR(100)) AS INIT_SUSCEPT_OTHER_1_IND,
			CAST([INIT_SUSCEPT_OTHER_QUNINOLONES] AS VARCHAR(100)) AS INIT_SUSCEPT_OTHER_QUNINOLONES,
			CAST([FINAL_SUSCEPT_CIPROFLOXACIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_CIPROFLOXACIN,
			CAST([INIT_SUSCEPT_CAPREOMYCIN] AS VARCHAR(100)) AS INIT_SUSCEPT_CAPREOMYCIN,
			CAST([INIT_SUSCEPT_LEVOFLOXACIN] AS VARCHAR(100)) AS INIT_SUSCEPT_LEVOFLOXACIN,
			CAST([TRANSNATIONAL_REFERRAL_IND] AS VARCHAR(100)) AS TRANSNATIONAL_REFERRAL_IND,
			CAST([INJECT_DRUG_USE_PAST_YEAR] AS VARCHAR(100)) AS INJECT_DRUG_USE_PAST_YEAR,
			CAST([CASE_VERIFICATION] AS VARCHAR(100)) AS CASE_VERIFICATION,
			CAST([INIT_REGIMEN_KANAMYCIN] AS VARCHAR(100)) AS INIT_REGIMEN_KANAMYCIN,
			CAST([FINAL_SUSCEPT_RIFAPENTINE] AS VARCHAR(100)) AS FINAL_SUSCEPT_RIFAPENTINE,
			CAST([FINAL_ISOLATE_NOT_SPUTUM] AS VARCHAR(100)) AS FINAL_ISOLATE_NOT_SPUTUM,
			CAST([CORRECTIONAL_FACIL_CUSTODY_IND] AS VARCHAR(100)) AS CORRECTIONAL_FACIL_CUSTODY_IND,
			CAST([MOVE_CITY] AS VARCHAR(100)) AS MOVE_CITY,
			CAST([CORRECTIONAL_FACIL_TY] AS VARCHAR(100)) AS CORRECTIONAL_FACIL_TY,
			CAST([INIT_REGIMEN_RIFAMPIN] AS VARCHAR(100)) AS INIT_REGIMEN_RIFAMPIN,
			CAST([INIT_REGIMEN_PA_SALICYLIC_ACID] AS VARCHAR(100)) AS INIT_REGIMEN_PA_SALICYLIC_ACID,
			CAST([OCCUPATION_RISK] AS VARCHAR(100)) AS OCCUPATION_RISK,
			CAST([CULT_TISSUE_RESULT] AS VARCHAR(100)) AS CULT_TISSUE_RESULT,
			CAST([INIT_SUSCEPT_PA_SALICYLIC_ACID] AS VARCHAR(100)) AS INIT_SUSCEPT_PA_SALICYLIC_ACID,
			CAST([CHEST_XRAY_RESULT] AS VARCHAR(100)) AS CHEST_XRAY_RESULT,
			CAST([FIRST_ISOLATE_NOT_SPUTUM] AS VARCHAR(100)) AS FIRST_ISOLATE_NOT_SPUTUM,
			CAST([FINAL_SUSCEPT_CYCLOSERINE] AS VARCHAR(100)) AS FINAL_SUSCEPT_CYCLOSERINE,
			CAST([SPUTUM_CULT_RPT_LAB_TY] AS VARCHAR(100)) AS SPUTUM_CULT_RPT_LAB_TY,
			CAST([FINAL_SUSCEPT_LEVOFLOXACIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_LEVOFLOXACIN,
			CAST([NAA_RPT_LAB_TY] AS VARCHAR(100)) AS NAA_RPT_LAB_TY,
			CAST([COUNTRY_OF_VERIFIED_CASE] AS VARCHAR(100)) AS COUNTRY_OF_VERIFIED_CASE,
			CAST([LINK_REASON_1] AS VARCHAR(100)) AS LINK_REASON_1,
			CAST([CT_SCAN_CAVITY_EVIDENCE] AS VARCHAR(100)) AS CT_SCAN_CAVITY_EVIDENCE,
			CAST([INIT_REGIMEN_RIFABUTIN] AS VARCHAR(100)) AS INIT_REGIMEN_RIFABUTIN,
			CAST([INIT_SUSCEPT_RIFAPENTINE] AS VARCHAR(100)) AS INIT_SUSCEPT_RIFAPENTINE,
			CAST([INIT_REGIMEN_LEVOFLOXACIN] AS VARCHAR(100)) AS INIT_REGIMEN_LEVOFLOXACIN,
			CAST([PATIENT_BIRTH_COUNTRY] AS VARCHAR(100)) AS PATIENT_BIRTH_COUNTRY,
			CAST([EXCESS_ALCOHOL_USE_PAST_YEAR] AS VARCHAR(100)) AS EXCESS_ALCOHOL_USE_PAST_YEAR,
			CAST([INIT_REGIMEN_OTHER_2_IND] AS VARCHAR(100)) AS INIT_REGIMEN_OTHER_2_IND,
			CAST([FINAL_SUSCEPT_CAPREOMYCIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_CAPREOMYCIN,
			CAST([FINAL_SUSCEPT_RIFABUTIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_RIFABUTIN,
			CAST([INIT_SUSCEPT_AMIKACIN] AS VARCHAR(100)) AS INIT_SUSCEPT_AMIKACIN,
			CAST([FINAL_SUSCEPT_RIFAMPIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_RIFAMPIN,
			CAST([INIT_REGIMEN_OTHER_1_IND] AS VARCHAR(100)) AS INIT_REGIMEN_OTHER_1_IND,
			CAST([FINAL_SUSCEPT_STREPTOMYCIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_STREPTOMYCIN,
			CAST([INIT_SUSCEPT_KANAMYCIN] AS VARCHAR(100)) AS INIT_SUSCEPT_KANAMYCIN,
			CAST([INIT_SUSCEPT_ETHAMBUTOL] AS VARCHAR(100)) AS INIT_SUSCEPT_ETHAMBUTOL,
			CAST([INIT_REGIMEN_ISONIAZID] AS VARCHAR(100)) AS INIT_REGIMEN_ISONIAZID,
			CAST([SPUTUM_SMEAR_RESULT] AS VARCHAR(100)) AS SPUTUM_SMEAR_RESULT,
			CAST([DOT] AS VARCHAR(100)) AS DOT,
			CAST([CORRECTIONAL_FACIL_RESIDENT] AS VARCHAR(100)) AS CORRECTIONAL_FACIL_RESIDENT,
			CAST([FINAL_SUSCEPT_MOXIFLOXACIN] AS VARCHAR(100)) AS FINAL_SUSCEPT_MOXIFLOXACIN,
			CAST([THERAPY_EXTEND_GT_12_OTHER] AS VARCHAR(100)) AS THERAPY_EXTEND_GT_12_OTHER,
			CAST([LINK_STATE_CASE_NUM_2] AS VARCHAR(100)) AS LINK_STATE_CASE_NUM_2,
			CAST([ISOLATE_ACCESSION_NUM] AS VARCHAR(100)) AS ISOLATE_ACCESSION_NUM,
			CAST([INIT_SUSCEPT_OTHER_1] AS VARCHAR(100)) AS INIT_SUSCEPT_OTHER_1,
			CAST([INIT_REGIMEN_OTHER_2] AS VARCHAR(100)) AS INIT_REGIMEN_OTHER_2,
			CAST([INIT_REGIMEN_OTHER_1] AS VARCHAR(100)) AS INIT_REGIMEN_OTHER_1,
			CAST([OTHER_TB_RISK_FACTORS] AS VARCHAR(100)) AS OTHER_TB_RISK_FACTORS,
			CAST([LINK_STATE_CASE_NUM_1] AS VARCHAR(100)) AS LINK_STATE_CASE_NUM_1,
			CAST([NO_CONV_DOC_OTHER_REASON] AS VARCHAR(100)) AS NO_CONV_DOC_OTHER_REASON,
			CAST([FINAL_SUSCEPT_OTHER_2] AS VARCHAR(100)) AS FINAL_SUSCEPT_OTHER_2,
			CAST([FINAL_SUSCEPT_OTHER] AS VARCHAR(100)) AS FINAL_SUSCEPT_OTHER,
			CAST([MOVE_CITY_2] AS VARCHAR(100)) AS MOVE_CITY_2,
			CAST([HIV_CITY_CNTY_PATIENT_NUM] AS VARCHAR(100)) AS HIV_CITY_CNTY_PATIENT_NUM,
			CAST([IGRA_TEST_TY] AS VARCHAR(100)) AS IGRA_TEST_TY,
			CAST([HIV_STATE_PATIENT_NUM] AS VARCHAR(100)) AS HIV_STATE_PATIENT_NUM,
			CAST([INIT_SUSCEPT_OTHER_2] AS VARCHAR(100)) AS INIT_SUSCEPT_OTHER_2,
			CAST([DISEASE_SITE] AS VARCHAR(100)) AS DISEASE_SITE,
			CAST([TB_VERCRIT_CALC_IND] AS VARCHAR(100)) AS TB_VERCRIT_CALC_IND,
			-- Character columns with length 2000 (VARCHAR(2000)) in original SAS
			CAST([COMMENTS_FOLLOW_UP_1] AS VARCHAR(100)) AS COMMENTS_FOLLOW_UP_1,
			CAST([COMMENTS_FOLLOW_UP_2] AS VARCHAR(100)) AS COMMENTS_FOLLOW_UP_2,
			CAST([PROVIDER_OVERRIDE_COMMENTS] AS VARCHAR(100)) AS PROVIDER_OVERRIDE_COMMENTS,
			-- Date conversions (ANYDTDTM32. in SAS to DATETIME in SQL)
			CAST(CAST([FINAL_ISOLATE_COLLECT_DATE] AS DATETIME) AS DATETIME) AS FINAL_ISOLATE_COLLECT_DATE,
			CAST(CAST([DATE_SUBMITTED] AS DATETIME) AS DATETIME) AS DATE_SUBMITTED,
			CAST(CAST([TST_PLACED_DATE] AS DATETIME) AS DATETIME) AS TST_PLACED_DATE,
			CAST(CAST([NAA_COLLECT_DATE] AS DATETIME) AS DATETIME) AS NAA_COLLECT_DATE,
			CAST(CAST([FIRST_ISOLATE_COLLECT_DATE] AS DATETIME) AS DATETIME) AS FIRST_ISOLATE_COLLECT_DATE,
			CAST(CAST([TB_SPUTUM_CULTURE_NEGATIVE_DAT] AS DATETIME) AS DATETIME) AS TB_SPUTUM_CULTURE_NEGATIVE_DAT,
			CAST(CAST([SMR_PATH_CYTO_COLLECT_DATE] AS DATETIME) AS DATETIME) AS SMR_PATH_CYTO_COLLECT_DATE,
			CAST(CAST([CULT_TISSUE_COLLECT_DATE] AS DATETIME) AS DATETIME) AS CULT_TISSUE_COLLECT_DATE,
			CAST(CAST([NAA_RESULT_RPT_DATE] AS DATETIME) AS DATETIME) AS NAA_RESULT_RPT_DATE,
			CAST(CAST([DATE_ARRIVED_IN_US] AS DATETIME) AS DATETIME) AS DATE_ARRIVED_IN_US,
			CAST(CAST([SPUTUM_SMEAR_COLLECT_DATE] AS DATETIME) AS DATETIME) AS SPUTUM_SMEAR_COLLECT_DATE,
			CAST(CAST([CULT_TISSUE_RESULT_RPT_DATE] AS DATETIME) AS DATETIME) AS CULT_TISSUE_RESULT_RPT_DATE,
			CAST(CAST([DATE_OF_DEATH] AS DATETIME) AS DATETIME) AS DATE_OF_DEATH,
			CAST(CAST([COUNT_DATE] AS DATETIME) AS DATETIME) AS COUNT_DATE,
			CAST(CAST([SPUTUM_CULT_COLLECT_DATE] AS DATETIME) AS DATETIME) AS SPUTUM_CULT_COLLECT_DATE,
			CAST(CAST([THERAPY_STOP_DATE] AS DATETIME) AS DATETIME) AS THERAPY_STOP_DATE,
			CAST(CAST([SPUTUM_CULT_RESULT_RPT_DATE] AS DATETIME) AS DATETIME) AS SPUTUM_CULT_RESULT_RPT_DATE,
			CAST(CAST([INIT_REGIMEN_START_DATE] AS DATETIME) AS DATETIME) AS INIT_REGIMEN_START_DATE,
			CAST(CAST([IGRA_COLLECT_DATE] AS DATETIME) AS DATETIME) AS IGRA_COLLECT_DATE,
			-- Numeric conversions (comma20. in SAS to INT in SQL)
			CAST(REPLACE([PREVIOUS_DIAGNOSIS_YEAR], ',', '') AS INT) AS PREVIOUS_DIAGNOSIS_YEAR,
			CAST(REPLACE([TST_MM_INDURATION], ',', '') AS INT) AS TST_MM_INDURATION,
			CAST(REPLACE([DOT_NUMBER_WEEKS], ',', '') AS INT) AS DOT_NUMBER_WEEKS
		INTO #S_TB_PAM_TEMP
		FROM #S_TB_PAM1;


		IF OBJECT_ID('tempdb..#S_TB_PAM') IS NOT NULL
					DROP TABLE #S_TB_PAM;

		WITH Counts AS (
			SELECT 
				t1.LAST_CHG_TIME,  -- Adjust based on actual columns in S_PAM_CHG_TIME
				t2.*,  -- Replace with explicit column list if needed
				(CASE WHEN t2.INIT_REGIMEN_ISONIAZID = 'Yes' THEN 1 ELSE 0 END) AS ISONIAZID_CNT,
				(CASE WHEN t2.INIT_REGIMEN_RIFAMPIN = 'Yes' THEN 1 ELSE 0 END) AS RIFAMPIN_CNT,
				(CASE WHEN t2.INIT_REGIMEN_PYRAZINAMIDE = 'Yes' THEN 1 ELSE 0 END) AS PYRAZINAMIDE_CNT,
				(CASE WHEN t2.INIT_REGIMEN_ETHAMBUTOL = 'Yes' THEN 1 ELSE 0 END) AS ETHAMBUTOL_CNT,
				(
					(CASE WHEN t2.INIT_REGIMEN_ISONIAZID = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFAMPIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_PYRAZINAMIDE = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_ETHAMBUTOL = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_STREPTOMYCIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_ETHIONAMIDE = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_KANAMYCIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CYCLOSERINE = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CAPREOMYCIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_PA_SALICYLIC_ACID = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_AMIKACIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFABUTIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CIPROFLOXACIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OFLOXACIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFAPENTINE = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_LEVOFLOXACIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_MOXIFLOXACIN = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OTHER_1_IND = 'Yes' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OTHER_2_IND = 'Yes' THEN 1 ELSE 0 END)
				) AS yesCounter,
				(
					(CASE WHEN t2.INIT_REGIMEN_ISONIAZID = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFAMPIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_PYRAZINAMIDE = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_ETHAMBUTOL = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_STREPTOMYCIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_ETHIONAMIDE = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_KANAMYCIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CYCLOSERINE = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CAPREOMYCIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_PA_SALICYLIC_ACID = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_AMIKACIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFABUTIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_CIPROFLOXACIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OFLOXACIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_RIFAPENTINE = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_LEVOFLOXACIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_MOXIFLOXACIN = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OTHER_1_IND = 'No' THEN 1 ELSE 0 END) +
					(CASE WHEN t2.INIT_REGIMEN_OTHER_2_IND = 'No' THEN 1 ELSE 0 END)
				) AS noCounter
			FROM #S_PAM_CHG_TIME t1
			INNER JOIN (
				SELECT *
				FROM (
					SELECT *,
						ROW_NUMBER() OVER (PARTITION BY TB_PAM_UID ORDER BY TB_PAM_UID) AS rn
					FROM #S_TB_PAM_TEMP
				) sub
				WHERE sub.rn = 1
			) t2
			ON t1.TB_PAM_UID = t2.TB_PAM_UID
			WHERE t1.TB_PAM_UID IS NOT NULL
		)
		SELECT 
			TB_PAM_UID,    
			-- Include all other columns from S_TB_PAM here (excluding TB_PAM_UID if duplicated)
			CALC_DISEASE_SITE,
			LINK_STATE_CASE_NUM_1,
			LINK_REASON_1,
			LINK_STATE_CASE_NUM_2,
			LINK_REASON_2,
			COUNT_STATUS,
			COUNTRY_OF_VERIFIED_CASE,
			COUNT_DATE,
			PREVIOUS_DIAGNOSIS_IND,
			PREVIOUS_DIAGNOSIS_YEAR,
			PATIENT_OUTSIDE_US_GT_2_MONTHS,
			PRIMARY_GUARD_1_BIRTH_COUNTRY,
			PRIMARY_GUARD_2_BIRTH_COUNTRY,
			STATUS_AT_DIAGNOSIS,
			DISEASE_SITE,
			SPUTUM_SMEAR_RESULT,
			SPUTUM_SMEAR_COLLECT_DATE,
			SPUTUM_CULTURE_RESULT,
			SPUTUM_CULT_COLLECT_DATE,
			SPUTUM_CULT_RESULT_RPT_DATE,
			SPUTUM_CULT_RPT_LAB_TY,
			SMR_PATH_CYTO_RESULT,
			SMR_PATH_CYTO_COLLECT_DATE,
			SMR_PATH_CYTO_SITE,
			CULT_TISSUE_RESULT,
			CULT_TISSUE_COLLECT_DATE,
			CULT_TISSUE_SITE,
			CULT_TISSUE_RESULT_RPT_DATE,
			CULT_TISSUE_RESULT_RPT_LAB_TY,
			NAA_RESULT,
			NAA_COLLECT_DATE,
			NAA_SPEC_IS_SPUTUM_IND,
			NAA_SPEC_NOT_SPUTUM,
			NAA_RESULT_RPT_DATE,
			NAA_RPT_LAB_TY,
			CHEST_XRAY_RESULT,
			CHEST_XRAY_CAVITY_EVIDENCE,
			CHEST_XRAY_MILIARY_EVIDENCE,
			CT_SCAN_RESULT,
			CT_SCAN_CAVITY_EVIDENCE,
			CT_SCAN_MILIARY_EVIDENCE,
			TST_RESULT,
			TST_PLACED_DATE,
			TST_MM_INDURATION,
			IGRA_RESULT,
			IGRA_COLLECT_DATE,
			IGRA_TEST_TY,
			PRIMARY_REASON_EVALUATED,
			HIV_STATUS,
			HIV_STATE_PATIENT_NUM,
			HIV_CITY_CNTY_PATIENT_NUM,
			HOMELESS_IND,
			CORRECTIONAL_FACIL_RESIDENT,
			CORRECTIONAL_FACIL_TY,
			CORRECTIONAL_FACIL_CUSTODY_IND,
			LONGTERM_CARE_FACIL_RESIDENT,
			LONGTERM_CARE_FACIL_TY,
			OCCUPATION_RISK,
			INJECT_DRUG_USE_PAST_YEAR,
			NONINJECT_DRUG_USE_PAST_YEAR,
			EXCESS_ALCOHOL_USE_PAST_YEAR,
			OTHER_TB_RISK_FACTORS,
			IMMIGRATION_STATUS_AT_US_ENTRY,
			INIT_REGIMEN_START_DATE,
			INIT_REGIMEN_ISONIAZID,
			INIT_REGIMEN_RIFAMPIN,
			INIT_REGIMEN_PYRAZINAMIDE,
			INIT_REGIMEN_ETHAMBUTOL,
			INIT_REGIMEN_STREPTOMYCIN,
			INIT_REGIMEN_ETHIONAMIDE,
			INIT_REGIMEN_KANAMYCIN,
			INIT_REGIMEN_CYCLOSERINE,
			INIT_REGIMEN_CAPREOMYCIN,
			INIT_REGIMEN_PA_SALICYLIC_ACID,
			INIT_REGIMEN_AMIKACIN,
			INIT_REGIMEN_RIFABUTIN,
			INIT_REGIMEN_CIPROFLOXACIN,
			INIT_REGIMEN_OFLOXACIN,
			INIT_REGIMEN_RIFAPENTINE,
			INIT_REGIMEN_LEVOFLOXACIN,
			INIT_REGIMEN_MOXIFLOXACIN,
			INIT_REGIMEN_OTHER_1_IND,
			INIT_REGIMEN_OTHER_1,
			INIT_REGIMEN_OTHER_2_IND,
			INIT_REGIMEN_OTHER_2,
			ISOLATE_SUBMITTED_IND,
			ISOLATE_ACCESSION_NUM,
			INIT_SUSCEPT_TESTING_DONE,
			FIRST_ISOLATE_COLLECT_DATE,
			FIRST_ISOLATE_IS_SPUTUM_IND,
			FIRST_ISOLATE_NOT_SPUTUM,
			INIT_SUSCEPT_ISONIAZID,
			INIT_SUSCEPT_RIFAMPIN,
			INIT_SUSCEPT_PYRAZINAMIDE,
			INIT_SUSCEPT_ETHAMBUTOL,
			INIT_SUSCEPT_STREPTOMYCIN,
			INIT_SUSCEPT_ETHIONAMIDE,
			INIT_SUSCEPT_KANAMYCIN,
			INIT_SUSCEPT_CYCLOSERINE,
			INIT_SUSCEPT_CAPREOMYCIN,
			INIT_SUSCEPT_PA_SALICYLIC_ACID,
			INIT_SUSCEPT_AMIKACIN,
			INIT_SUSCEPT_RIFABUTIN,
			INIT_SUSCEPT_CIPROFLOXACIN,
			INIT_SUSCEPT_OFLOXACIN,
			INIT_SUSCEPT_RIFAPENTINE,
			INIT_SUSCEPT_LEVOFLOXACIN,
			INIT_SUSCEPT_MOXIFLOXACIN,
			INIT_SUSCEPT_OTHER_QUNINOLONES,
			INIT_SUSCEPT_OTHER_1_IND,
			INIT_SUSCEPT_OTHER_1,
			INIT_SUSCEPT_OTHER_2_IND,
			INIT_SUSCEPT_OTHER_2,
			SPUTUM_CULTURE_CONV_DOCUMENTED,
			TB_SPUTUM_CULTURE_NEGATIVE_DAT,
			NO_CONV_DOC_REASON,
			NO_CONV_DOC_OTHER_REASON,
			MOVED_IND,
			TRANSNATIONAL_REFERRAL_IND,
			MOVE_CITY,
			THERAPY_STOP_DATE,
			THERAPY_STOP_REASON,
			THERAPY_STOP_CAUSE_OF_DEATH,
			THERAPY_EXTEND_GT_12_OTHER,
			DOT,
			DOT_NUMBER_WEEKS,
			FINAL_SUSCEPT_TESTING,
			FINAL_ISOLATE_COLLECT_DATE,
			FINAL_ISOLATE_IS_SPUTUM_IND,
			FINAL_ISOLATE_NOT_SPUTUM,
			FINAL_SUSCEPT_ISONIAZID,
			FINAL_SUSCEPT_RIFAMPIN,
			FINAL_SUSCEPT_PYRAZINAMIDE,
			FINAL_SUSCEPT_ETHAMBUTOL,
			FINAL_SUSCEPT_STREPTOMYCIN,
			FINAL_SUSCEPT_ETHIONAMIDE,
			FINAL_SUSCEPT_KANAMYCIN,
			FINAL_SUSCEPT_CYCLOSERINE,
			FINAL_SUSCEPT_CAPREOMYCIN,
			FINAL_SUSCEPT_PA_SALICYLIC_ACI,
			FINAL_SUSCEPT_AMIKACIN,
			FINAL_SUSCEPT_RIFABUTIN,
			FINAL_SUSCEPT_CIPROFLOXACIN,
			FINAL_SUSCEPT_OFLOXACIN,
			FINAL_SUSCEPT_RIFAPENTINE,
			FINAL_SUSCEPT_LEVOFLOXACIN,
			FINAL_SUSCEPT_MOXIFLOXACIN,
			FINAL_SUSCEPT_OTHER_QUINOLONES,
			FINAL_SUSCEPT_OTHER_IND,
			FINAL_SUSCEPT_OTHER,
			FINAL_SUSCEPT_OTHER_2_IND,
			FINAL_SUSCEPT_OTHER_2,
			CASE_VERIFICATION,
			COMMENTS_FOLLOW_UP_1,
			COMMENTS_FOLLOW_UP_2,
			MOVE_CITY_2,
			DATE_ARRIVED_IN_US,
			DATE_SUBMITTED,
			PATIENT_BIRTH_COUNTRY,
			US_BORN_IND,
			TB_VERCRIT_CALC_IND,
			PROVIDER_OVERRIDE_COMMENTS,
			CAST(
				CASE 
					WHEN yesCounter = 0 AND noCounter >= 1 THEN '0'
					WHEN yesCounter = 1 THEN '1'
					WHEN ISONIAZID_CNT + RIFAMPIN_CNT + PYRAZINAMIDE_CNT + ETHAMBUTOL_CNT = 4 AND yesCounter = 4 THEN '2'
					WHEN ISONIAZID_CNT + RIFAMPIN_CNT + PYRAZINAMIDE_CNT = 3 AND yesCounter = 3 THEN '3'
					WHEN ISONIAZID_CNT + RIFAMPIN_CNT = 2 AND yesCounter = 2 THEN '4'
					WHEN yesCounter >= 2 THEN '5'
					WHEN yesCounter = 0 AND noCounter = 0 THEN '9'
				END AS VARCHAR(200)
			) AS INIT_DRUG_REG_CALC,
			LAST_CHG_TIME  -- Adjust based on actual columns
		INTO #S_TB_PAM
		FROM Counts;


		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #S_TB_PAM;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;	

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' GET NEW ANSWER ENTRIES L_TB_PAM_N';


		-- L_TB_PAM_N
		-- Create table L_TB_PAM_N with TB_PAM_UID values that are in S_TB_PAM but not in D_TB_PAM
		IF OBJECT_ID('tempdb..#L_TB_PAM_BASE_NEW') IS NOT NULL
			DROP TABLE #L_TB_PAM_BASE_NEW;

		SELECT TB_PAM_UID 
		INTO #L_TB_PAM_BASE_NEW
		FROM #S_TB_PAM
		EXCEPT 
		SELECT TB_PAM_UID  
		FROM [dbo].D_TB_PAM WITH (NOLOCK);

		--insert new items to generate key D_TB_PAM_KEY
		INSERT INTO [dbo].[nrt_d_tb_pam_key] (TB_PAM_UID)
		SELECT 
			TB_PAM_UID
		FROM #L_TB_PAM_BASE_NEW;

		ALTER TABLE #L_TB_PAM_BASE_NEW 
		ADD D_TB_PAM_KEY INT;

		UPDATE #L_TB_PAM_BASE_NEW 
		SET D_TB_PAM_KEY = K.D_TB_PAM_KEY
		FROM #L_TB_PAM_BASE_NEW N
		INNER JOIN [dbo].[nrt_d_tb_pam_key] K
		ON K.TB_PAM_UID = N.TB_PAM_UID;

		IF OBJECT_ID('tempdb..#L_TB_PAM_N') IS NOT NULL
		DROP TABLE #L_TB_PAM_N;

		SELECT
			TB_PAM_UID,
			D_TB_PAM_KEY
		INTO #L_TB_PAM_N
		FROM #L_TB_PAM_BASE_NEW;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #L_TB_PAM_N;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;	

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' GET EXISTING ANSWER ENTRIES L_TB_PAM_E';

		-- L_TB_PAM_E
		IF OBJECT_ID('tempdb..#L_TB_PAM_E') IS NOT NULL
			DROP TABLE #L_TB_PAM_E

		SELECT 
			S.TB_PAM_UID, 
			D.D_TB_PAM_KEY
		INTO #L_TB_PAM_E
		FROM #S_TB_PAM S
		INNER JOIN  [dbo].D_TB_PAM D 
			ON S.TB_PAM_UID = D.TB_PAM_UID;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #L_TB_PAM_E;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' GET NEW DIMENSION ENTRIES D_TB_PAM_N';

		-- D_TB_PAM_N (for INSERT)
		IF OBJECT_ID('tempdb..#D_TB_PAM_N') IS NOT NULL
			DROP TABLE #D_TB_PAm_N;

		SELECT 
			L.D_TB_PAM_KEY,
			S.*
		INTO #D_TB_PAM_N
		FROM #S_TB_PAM S
		INNER JOIN #L_TB_PAM_N L
			ON S.TB_PAM_UID = L.TB_PAM_UID;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #D_TB_PAM_N

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;

	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' INSERT NEW DIMENSION ENTRIES IN TABLE D_TB_PAM ';

		--insert into D_TB_PAM
		-- D_TB_PAM_N
		INSERT INTO [dbo].D_TB_PAM (
			D_TB_PAM_KEY,
			TB_PAM_UID,
			CALC_DISEASE_SITE,
			LINK_STATE_CASE_NUM_1,
			LINK_REASON_1,
			LINK_STATE_CASE_NUM_2,
			LINK_REASON_2,
			COUNT_STATUS,
			COUNTRY_OF_VERIFIED_CASE,
			COUNT_DATE,
			PREVIOUS_DIAGNOSIS_IND,
			PREVIOUS_DIAGNOSIS_YEAR,
			PATIENT_OUTSIDE_US_GT_2_MONTHS,
			PRIMARY_GUARD_1_BIRTH_COUNTRY,
			PRIMARY_GUARD_2_BIRTH_COUNTRY,
			STATUS_AT_DIAGNOSIS,
			DISEASE_SITE,
			SPUTUM_SMEAR_RESULT,
			SPUTUM_SMEAR_COLLECT_DATE,
			SPUTUM_CULTURE_RESULT,
			SPUTUM_CULT_COLLECT_DATE,
			SPUTUM_CULT_RESULT_RPT_DATE,
			SPUTUM_CULT_RPT_LAB_TY,
			SMR_PATH_CYTO_RESULT,
			SMR_PATH_CYTO_COLLECT_DATE,
			SMR_PATH_CYTO_SITE,
			CULT_TISSUE_RESULT,
			CULT_TISSUE_COLLECT_DATE,
			CULT_TISSUE_SITE,
			CULT_TISSUE_RESULT_RPT_DATE,
			CULT_TISSUE_RESULT_RPT_LAB_TY,
			NAA_RESULT,
			NAA_COLLECT_DATE,
			NAA_SPEC_IS_SPUTUM_IND,
			NAA_SPEC_NOT_SPUTUM,
			NAA_RESULT_RPT_DATE,
			NAA_RPT_LAB_TY,
			CHEST_XRAY_RESULT,
			CHEST_XRAY_CAVITY_EVIDENCE,
			CHEST_XRAY_MILIARY_EVIDENCE,
			CT_SCAN_RESULT,
			CT_SCAN_CAVITY_EVIDENCE,
			CT_SCAN_MILIARY_EVIDENCE,
			TST_RESULT,
			TST_PLACED_DATE,
			TST_MM_INDURATION,
			IGRA_RESULT,
			IGRA_COLLECT_DATE,
			IGRA_TEST_TY,
			PRIMARY_REASON_EVALUATED,
			HIV_STATUS,
			HIV_STATE_PATIENT_NUM,
			HIV_CITY_CNTY_PATIENT_NUM,
			HOMELESS_IND,
			CORRECTIONAL_FACIL_RESIDENT,
			CORRECTIONAL_FACIL_TY,
			CORRECTIONAL_FACIL_CUSTODY_IND,
			LONGTERM_CARE_FACIL_RESIDENT,
			LONGTERM_CARE_FACIL_TY,
			OCCUPATION_RISK,
			INJECT_DRUG_USE_PAST_YEAR,
			NONINJECT_DRUG_USE_PAST_YEAR,
			EXCESS_ALCOHOL_USE_PAST_YEAR,
			OTHER_TB_RISK_FACTORS,
			IMMIGRATION_STATUS_AT_US_ENTRY,
			INIT_REGIMEN_START_DATE,
			INIT_REGIMEN_ISONIAZID,
			INIT_REGIMEN_RIFAMPIN,
			INIT_REGIMEN_PYRAZINAMIDE,
			INIT_REGIMEN_ETHAMBUTOL,
			INIT_REGIMEN_STREPTOMYCIN,
			INIT_REGIMEN_ETHIONAMIDE,
			INIT_REGIMEN_KANAMYCIN,
			INIT_REGIMEN_CYCLOSERINE,
			INIT_REGIMEN_CAPREOMYCIN,
			INIT_REGIMEN_PA_SALICYLIC_ACID,
			INIT_REGIMEN_AMIKACIN,
			INIT_REGIMEN_RIFABUTIN,
			INIT_REGIMEN_CIPROFLOXACIN,
			INIT_REGIMEN_OFLOXACIN,
			INIT_REGIMEN_RIFAPENTINE,
			INIT_REGIMEN_LEVOFLOXACIN,
			INIT_REGIMEN_MOXIFLOXACIN,
			INIT_REGIMEN_OTHER_1_IND,
			INIT_REGIMEN_OTHER_1,
			INIT_REGIMEN_OTHER_2_IND,
			INIT_REGIMEN_OTHER_2,
			ISOLATE_SUBMITTED_IND,
			ISOLATE_ACCESSION_NUM,
			INIT_SUSCEPT_TESTING_DONE,
			FIRST_ISOLATE_COLLECT_DATE,
			FIRST_ISOLATE_IS_SPUTUM_IND,
			FIRST_ISOLATE_NOT_SPUTUM,
			INIT_SUSCEPT_ISONIAZID,
			INIT_SUSCEPT_RIFAMPIN,
			INIT_SUSCEPT_PYRAZINAMIDE,
			INIT_SUSCEPT_ETHAMBUTOL,
			INIT_SUSCEPT_STREPTOMYCIN,
			INIT_SUSCEPT_ETHIONAMIDE,
			INIT_SUSCEPT_KANAMYCIN,
			INIT_SUSCEPT_CYCLOSERINE,
			INIT_SUSCEPT_CAPREOMYCIN,
			INIT_SUSCEPT_PA_SALICYLIC_ACID,
			INIT_SUSCEPT_AMIKACIN,
			INIT_SUSCEPT_RIFABUTIN,
			INIT_SUSCEPT_CIPROFLOXACIN,
			INIT_SUSCEPT_OFLOXACIN,
			INIT_SUSCEPT_RIFAPENTINE,
			INIT_SUSCEPT_LEVOFLOXACIN,
			INIT_SUSCEPT_MOXIFLOXACIN,
			INIT_SUSCEPT_OTHER_QUNINOLONES,
			INIT_SUSCEPT_OTHER_1_IND,
			INIT_SUSCEPT_OTHER_1,
			INIT_SUSCEPT_OTHER_2_IND,
			INIT_SUSCEPT_OTHER_2,
			SPUTUM_CULTURE_CONV_DOCUMENTED,
			TB_SPUTUM_CULTURE_NEGATIVE_DAT,
			NO_CONV_DOC_REASON,
			NO_CONV_DOC_OTHER_REASON,
			MOVED_IND,
			TRANSNATIONAL_REFERRAL_IND,
			MOVE_CITY,
			THERAPY_STOP_DATE,
			THERAPY_STOP_REASON,
			THERAPY_STOP_CAUSE_OF_DEATH,
			THERAPY_EXTEND_GT_12_OTHER,
			DOT,
			DOT_NUMBER_WEEKS,
			FINAL_SUSCEPT_TESTING,
			FINAL_ISOLATE_COLLECT_DATE,
			FINAL_ISOLATE_IS_SPUTUM_IND,
			FINAL_ISOLATE_NOT_SPUTUM,
			FINAL_SUSCEPT_ISONIAZID,
			FINAL_SUSCEPT_RIFAMPIN,
			FINAL_SUSCEPT_PYRAZINAMIDE,
			FINAL_SUSCEPT_ETHAMBUTOL,
			FINAL_SUSCEPT_STREPTOMYCIN,
			FINAL_SUSCEPT_ETHIONAMIDE,
			FINAL_SUSCEPT_KANAMYCIN,
			FINAL_SUSCEPT_CYCLOSERINE,
			FINAL_SUSCEPT_CAPREOMYCIN,
			FINAL_SUSCEPT_PA_SALICYLIC_ACI,
			FINAL_SUSCEPT_AMIKACIN,
			FINAL_SUSCEPT_RIFABUTIN,
			FINAL_SUSCEPT_CIPROFLOXACIN,
			FINAL_SUSCEPT_OFLOXACIN,
			FINAL_SUSCEPT_RIFAPENTINE,
			FINAL_SUSCEPT_LEVOFLOXACIN,
			FINAL_SUSCEPT_MOXIFLOXACIN,
			FINAL_SUSCEPT_OTHER_QUINOLONES,
			FINAL_SUSCEPT_OTHER_IND,
			FINAL_SUSCEPT_OTHER,
			FINAL_SUSCEPT_OTHER_2_IND,
			FINAL_SUSCEPT_OTHER_2,
			CASE_VERIFICATION,
			COMMENTS_FOLLOW_UP_1,
			COMMENTS_FOLLOW_UP_2,
			MOVE_CITY_2,
			DATE_ARRIVED_IN_US,
			DATE_SUBMITTED,
			PATIENT_BIRTH_COUNTRY,
			US_BORN_IND,
			TB_VERCRIT_CALC_IND,
			PROVIDER_OVERRIDE_COMMENTS,
			INIT_DRUG_REG_CALC,
			LAST_CHG_TIME
		)
		SELECT 
			D_TB_PAM_KEY,
			TB_PAM_UID,
			CALC_DISEASE_SITE,
			LINK_STATE_CASE_NUM_1,
			LINK_REASON_1,
			LINK_STATE_CASE_NUM_2,
			LINK_REASON_2,
			COUNT_STATUS,
			COUNTRY_OF_VERIFIED_CASE,
			COUNT_DATE,
			PREVIOUS_DIAGNOSIS_IND,
			PREVIOUS_DIAGNOSIS_YEAR,
			PATIENT_OUTSIDE_US_GT_2_MONTHS,
			PRIMARY_GUARD_1_BIRTH_COUNTRY,
			PRIMARY_GUARD_2_BIRTH_COUNTRY,
			STATUS_AT_DIAGNOSIS,
			DISEASE_SITE,
			SPUTUM_SMEAR_RESULT,
			SPUTUM_SMEAR_COLLECT_DATE,
			SPUTUM_CULTURE_RESULT,
			SPUTUM_CULT_COLLECT_DATE,
			SPUTUM_CULT_RESULT_RPT_DATE,
			SPUTUM_CULT_RPT_LAB_TY,
			SMR_PATH_CYTO_RESULT,
			SMR_PATH_CYTO_COLLECT_DATE,
			SMR_PATH_CYTO_SITE,
			CULT_TISSUE_RESULT,
			CULT_TISSUE_COLLECT_DATE,
			CULT_TISSUE_SITE,
			CULT_TISSUE_RESULT_RPT_DATE,
			CULT_TISSUE_RESULT_RPT_LAB_TY,
			NAA_RESULT,
			NAA_COLLECT_DATE,
			NAA_SPEC_IS_SPUTUM_IND,
			NAA_SPEC_NOT_SPUTUM,
			NAA_RESULT_RPT_DATE,
			NAA_RPT_LAB_TY,
			CHEST_XRAY_RESULT,
			CHEST_XRAY_CAVITY_EVIDENCE,
			CHEST_XRAY_MILIARY_EVIDENCE,
			CT_SCAN_RESULT,
			CT_SCAN_CAVITY_EVIDENCE,
			CT_SCAN_MILIARY_EVIDENCE,
			TST_RESULT,
			TST_PLACED_DATE,
			TST_MM_INDURATION,
			IGRA_RESULT,
			IGRA_COLLECT_DATE,
			IGRA_TEST_TY,
			PRIMARY_REASON_EVALUATED,
			HIV_STATUS,
			HIV_STATE_PATIENT_NUM,
			HIV_CITY_CNTY_PATIENT_NUM,
			HOMELESS_IND,
			CORRECTIONAL_FACIL_RESIDENT,
			CORRECTIONAL_FACIL_TY,
			CORRECTIONAL_FACIL_CUSTODY_IND,
			LONGTERM_CARE_FACIL_RESIDENT,
			LONGTERM_CARE_FACIL_TY,
			OCCUPATION_RISK,
			INJECT_DRUG_USE_PAST_YEAR,
			NONINJECT_DRUG_USE_PAST_YEAR,
			EXCESS_ALCOHOL_USE_PAST_YEAR,
			OTHER_TB_RISK_FACTORS,
			IMMIGRATION_STATUS_AT_US_ENTRY,
			INIT_REGIMEN_START_DATE,
			INIT_REGIMEN_ISONIAZID,
			INIT_REGIMEN_RIFAMPIN,
			INIT_REGIMEN_PYRAZINAMIDE,
			INIT_REGIMEN_ETHAMBUTOL,
			INIT_REGIMEN_STREPTOMYCIN,
			INIT_REGIMEN_ETHIONAMIDE,
			INIT_REGIMEN_KANAMYCIN,
			INIT_REGIMEN_CYCLOSERINE,
			INIT_REGIMEN_CAPREOMYCIN,
			INIT_REGIMEN_PA_SALICYLIC_ACID,
			INIT_REGIMEN_AMIKACIN,
			INIT_REGIMEN_RIFABUTIN,
			INIT_REGIMEN_CIPROFLOXACIN,
			INIT_REGIMEN_OFLOXACIN,
			INIT_REGIMEN_RIFAPENTINE,
			INIT_REGIMEN_LEVOFLOXACIN,
			INIT_REGIMEN_MOXIFLOXACIN,
			INIT_REGIMEN_OTHER_1_IND,
			INIT_REGIMEN_OTHER_1,
			INIT_REGIMEN_OTHER_2_IND,
			INIT_REGIMEN_OTHER_2,
			ISOLATE_SUBMITTED_IND,
			ISOLATE_ACCESSION_NUM,
			INIT_SUSCEPT_TESTING_DONE,
			FIRST_ISOLATE_COLLECT_DATE,
			FIRST_ISOLATE_IS_SPUTUM_IND,
			FIRST_ISOLATE_NOT_SPUTUM,
			INIT_SUSCEPT_ISONIAZID,
			INIT_SUSCEPT_RIFAMPIN,
			INIT_SUSCEPT_PYRAZINAMIDE,
			INIT_SUSCEPT_ETHAMBUTOL,
			INIT_SUSCEPT_STREPTOMYCIN,
			INIT_SUSCEPT_ETHIONAMIDE,
			INIT_SUSCEPT_KANAMYCIN,
			INIT_SUSCEPT_CYCLOSERINE,
			INIT_SUSCEPT_CAPREOMYCIN,
			INIT_SUSCEPT_PA_SALICYLIC_ACID,
			INIT_SUSCEPT_AMIKACIN,
			INIT_SUSCEPT_RIFABUTIN,
			INIT_SUSCEPT_CIPROFLOXACIN,
			INIT_SUSCEPT_OFLOXACIN,
			INIT_SUSCEPT_RIFAPENTINE,
			INIT_SUSCEPT_LEVOFLOXACIN,
			INIT_SUSCEPT_MOXIFLOXACIN,
			INIT_SUSCEPT_OTHER_QUNINOLONES,
			INIT_SUSCEPT_OTHER_1_IND,
			INIT_SUSCEPT_OTHER_1,
			INIT_SUSCEPT_OTHER_2_IND,
			INIT_SUSCEPT_OTHER_2,
			SPUTUM_CULTURE_CONV_DOCUMENTED,
			TB_SPUTUM_CULTURE_NEGATIVE_DAT,
			NO_CONV_DOC_REASON,
			NO_CONV_DOC_OTHER_REASON,
			MOVED_IND,
			TRANSNATIONAL_REFERRAL_IND,
			MOVE_CITY,
			THERAPY_STOP_DATE,
			THERAPY_STOP_REASON,
			THERAPY_STOP_CAUSE_OF_DEATH,
			THERAPY_EXTEND_GT_12_OTHER,
			DOT,
			DOT_NUMBER_WEEKS,
			FINAL_SUSCEPT_TESTING,
			FINAL_ISOLATE_COLLECT_DATE,
			FINAL_ISOLATE_IS_SPUTUM_IND,
			FINAL_ISOLATE_NOT_SPUTUM,
			FINAL_SUSCEPT_ISONIAZID,
			FINAL_SUSCEPT_RIFAMPIN,
			FINAL_SUSCEPT_PYRAZINAMIDE,
			FINAL_SUSCEPT_ETHAMBUTOL,
			FINAL_SUSCEPT_STREPTOMYCIN,
			FINAL_SUSCEPT_ETHIONAMIDE,
			FINAL_SUSCEPT_KANAMYCIN,
			FINAL_SUSCEPT_CYCLOSERINE,
			FINAL_SUSCEPT_CAPREOMYCIN,
			FINAL_SUSCEPT_PA_SALICYLIC_ACI,
			FINAL_SUSCEPT_AMIKACIN,
			FINAL_SUSCEPT_RIFABUTIN,
			FINAL_SUSCEPT_CIPROFLOXACIN,
			FINAL_SUSCEPT_OFLOXACIN,
			FINAL_SUSCEPT_RIFAPENTINE,
			FINAL_SUSCEPT_LEVOFLOXACIN,
			FINAL_SUSCEPT_MOXIFLOXACIN,
			FINAL_SUSCEPT_OTHER_QUINOLONES,
			FINAL_SUSCEPT_OTHER_IND,
			FINAL_SUSCEPT_OTHER,
			FINAL_SUSCEPT_OTHER_2_IND,
			FINAL_SUSCEPT_OTHER_2,
			CASE_VERIFICATION,
			COMMENTS_FOLLOW_UP_1,
			COMMENTS_FOLLOW_UP_2,
			MOVE_CITY_2,
			DATE_ARRIVED_IN_US,
			DATE_SUBMITTED,
			PATIENT_BIRTH_COUNTRY,
			US_BORN_IND,
			TB_VERCRIT_CALC_IND,
			PROVIDER_OVERRIDE_COMMENTS,
			INIT_DRUG_REG_CALC,
			LAST_CHG_TIME
		FROM #D_TB_PAM_N;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #D_TB_PAM_N;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);
	
	COMMIT TRANSACTION;


	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' GET EXISTING DIMENSION ENTRIES D_TB_PAM_E';

		-- D_TB_PAM_E (for UPDATE)
		IF OBJECT_ID('tempdb..#D_TB_PAM_E') IS NOT NULL
			DROP TABLE #D_TB_PAM_E;

		SELECT 
			E.D_TB_PAM_KEY, 
			S.*
		INTO #D_TB_PAM_E
		FROM #S_TB_PAM S
		INNER JOIN #L_TB_PAM_E E
			ON S.TB_PAM_UID = E.TB_PAM_UID;

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #D_TB_PAM_E;

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);

	COMMIT TRANSACTION;


	BEGIN TRANSACTION

		SET
            @PROC_STEP_NO = @PROC_STEP_NO + 1;
        SET
            @PROC_STEP_NAME = ' UPDATE EXISTING DIMENSION ENTRIES IN TABLE D_TB_PAM';


		-- 10. UPADTE into D_TB_PAM
		UPDATE D
		SET 
			D.CALC_DISEASE_SITE = S.CALC_DISEASE_SITE,
			D.LINK_STATE_CASE_NUM_1 = S.LINK_STATE_CASE_NUM_1,
			D.LINK_REASON_1 = S.LINK_REASON_1,
			D.LINK_STATE_CASE_NUM_2 = S.LINK_STATE_CASE_NUM_2,
			D.LINK_REASON_2 = S.LINK_REASON_2,
			D.COUNT_STATUS = S.COUNT_STATUS,
			D.COUNTRY_OF_VERIFIED_CASE = S.COUNTRY_OF_VERIFIED_CASE,
			D.COUNT_DATE = S.COUNT_DATE,
			D.PREVIOUS_DIAGNOSIS_IND = S.PREVIOUS_DIAGNOSIS_IND,
			D.PREVIOUS_DIAGNOSIS_YEAR = S.PREVIOUS_DIAGNOSIS_YEAR,
			D.PATIENT_OUTSIDE_US_GT_2_MONTHS = S.PATIENT_OUTSIDE_US_GT_2_MONTHS,
			D.PRIMARY_GUARD_1_BIRTH_COUNTRY = S.PRIMARY_GUARD_1_BIRTH_COUNTRY,
			D.PRIMARY_GUARD_2_BIRTH_COUNTRY = S.PRIMARY_GUARD_2_BIRTH_COUNTRY,
			D.STATUS_AT_DIAGNOSIS = S.STATUS_AT_DIAGNOSIS,
			D.DISEASE_SITE = S.DISEASE_SITE,
			D.SPUTUM_SMEAR_RESULT = S.SPUTUM_SMEAR_RESULT,
			D.SPUTUM_SMEAR_COLLECT_DATE = S.SPUTUM_SMEAR_COLLECT_DATE,
			D.SPUTUM_CULTURE_RESULT = S.SPUTUM_CULTURE_RESULT,
			D.SPUTUM_CULT_COLLECT_DATE = S.SPUTUM_CULT_COLLECT_DATE,
			D.SPUTUM_CULT_RESULT_RPT_DATE = S.SPUTUM_CULT_RESULT_RPT_DATE,
			D.SPUTUM_CULT_RPT_LAB_TY = S.SPUTUM_CULT_RPT_LAB_TY,
			D.SMR_PATH_CYTO_RESULT = S.SMR_PATH_CYTO_RESULT,
			D.SMR_PATH_CYTO_COLLECT_DATE = S.SMR_PATH_CYTO_COLLECT_DATE,
			D.SMR_PATH_CYTO_SITE = S.SMR_PATH_CYTO_SITE,
			D.CULT_TISSUE_RESULT = S.CULT_TISSUE_RESULT,
			D.CULT_TISSUE_COLLECT_DATE = S.CULT_TISSUE_COLLECT_DATE,
			D.CULT_TISSUE_SITE = S.CULT_TISSUE_SITE,
			D.CULT_TISSUE_RESULT_RPT_DATE = S.CULT_TISSUE_RESULT_RPT_DATE,
			D.CULT_TISSUE_RESULT_RPT_LAB_TY = S.CULT_TISSUE_RESULT_RPT_LAB_TY,
			D.NAA_RESULT = S.NAA_RESULT,
			D.NAA_COLLECT_DATE = S.NAA_COLLECT_DATE,
			D.NAA_SPEC_IS_SPUTUM_IND = S.NAA_SPEC_IS_SPUTUM_IND,
			D.NAA_SPEC_NOT_SPUTUM = S.NAA_SPEC_NOT_SPUTUM,
			D.NAA_RESULT_RPT_DATE = S.NAA_RESULT_RPT_DATE,
			D.NAA_RPT_LAB_TY = S.NAA_RPT_LAB_TY,
			D.CHEST_XRAY_RESULT = S.CHEST_XRAY_RESULT,
			D.CHEST_XRAY_CAVITY_EVIDENCE = S.CHEST_XRAY_CAVITY_EVIDENCE,
			D.CHEST_XRAY_MILIARY_EVIDENCE = S.CHEST_XRAY_MILIARY_EVIDENCE,
			D.CT_SCAN_RESULT = S.CT_SCAN_RESULT,
			D.CT_SCAN_CAVITY_EVIDENCE = S.CT_SCAN_CAVITY_EVIDENCE,
			D.CT_SCAN_MILIARY_EVIDENCE = S.CT_SCAN_MILIARY_EVIDENCE,
			D.TST_RESULT = S.TST_RESULT,
			D.TST_PLACED_DATE = S.TST_PLACED_DATE,
			D.TST_MM_INDURATION = S.TST_MM_INDURATION,
			D.IGRA_RESULT = S.IGRA_RESULT,
			D.IGRA_COLLECT_DATE = S.IGRA_COLLECT_DATE,
			D.IGRA_TEST_TY = S.IGRA_TEST_TY,
			D.PRIMARY_REASON_EVALUATED = S.PRIMARY_REASON_EVALUATED,
			D.HIV_STATUS = S.HIV_STATUS,
			D.HIV_STATE_PATIENT_NUM = S.HIV_STATE_PATIENT_NUM,
			D.HIV_CITY_CNTY_PATIENT_NUM = S.HIV_CITY_CNTY_PATIENT_NUM,
			D.HOMELESS_IND = S.HOMELESS_IND,
			D.CORRECTIONAL_FACIL_RESIDENT = S.CORRECTIONAL_FACIL_RESIDENT,
			D.CORRECTIONAL_FACIL_TY = S.CORRECTIONAL_FACIL_TY,
			D.CORRECTIONAL_FACIL_CUSTODY_IND = S.CORRECTIONAL_FACIL_CUSTODY_IND,
			D.LONGTERM_CARE_FACIL_RESIDENT = S.LONGTERM_CARE_FACIL_RESIDENT,
			D.LONGTERM_CARE_FACIL_TY = S.LONGTERM_CARE_FACIL_TY,
			D.OCCUPATION_RISK = S.OCCUPATION_RISK,
			D.INJECT_DRUG_USE_PAST_YEAR = S.INJECT_DRUG_USE_PAST_YEAR,
			D.NONINJECT_DRUG_USE_PAST_YEAR = S.NONINJECT_DRUG_USE_PAST_YEAR,
			D.EXCESS_ALCOHOL_USE_PAST_YEAR = S.EXCESS_ALCOHOL_USE_PAST_YEAR,
			D.OTHER_TB_RISK_FACTORS = S.OTHER_TB_RISK_FACTORS,
			D.IMMIGRATION_STATUS_AT_US_ENTRY = S.IMMIGRATION_STATUS_AT_US_ENTRY,
			D.INIT_REGIMEN_START_DATE = S.INIT_REGIMEN_START_DATE,
			D.INIT_REGIMEN_ISONIAZID = S.INIT_REGIMEN_ISONIAZID,
			D.INIT_REGIMEN_RIFAMPIN = S.INIT_REGIMEN_RIFAMPIN,
			D.INIT_REGIMEN_PYRAZINAMIDE = S.INIT_REGIMEN_PYRAZINAMIDE,
			D.INIT_REGIMEN_ETHAMBUTOL = S.INIT_REGIMEN_ETHAMBUTOL,
			D.INIT_REGIMEN_STREPTOMYCIN = S.INIT_REGIMEN_STREPTOMYCIN,
			D.INIT_REGIMEN_ETHIONAMIDE = S.INIT_REGIMEN_ETHIONAMIDE,
			D.INIT_REGIMEN_KANAMYCIN = S.INIT_REGIMEN_KANAMYCIN,
			D.INIT_REGIMEN_CYCLOSERINE = S.INIT_REGIMEN_CYCLOSERINE,
			D.INIT_REGIMEN_CAPREOMYCIN = S.INIT_REGIMEN_CAPREOMYCIN,
			D.INIT_REGIMEN_PA_SALICYLIC_ACID = S.INIT_REGIMEN_PA_SALICYLIC_ACID,
			D.INIT_REGIMEN_AMIKACIN = S.INIT_REGIMEN_AMIKACIN,
			D.INIT_REGIMEN_RIFABUTIN = S.INIT_REGIMEN_RIFABUTIN,
			D.INIT_REGIMEN_CIPROFLOXACIN = S.INIT_REGIMEN_CIPROFLOXACIN,
			D.INIT_REGIMEN_OFLOXACIN = S.INIT_REGIMEN_OFLOXACIN,
			D.INIT_REGIMEN_RIFAPENTINE = S.INIT_REGIMEN_RIFAPENTINE,
			D.INIT_REGIMEN_LEVOFLOXACIN = S.INIT_REGIMEN_LEVOFLOXACIN,
			D.INIT_REGIMEN_MOXIFLOXACIN = S.INIT_REGIMEN_MOXIFLOXACIN,
			D.INIT_REGIMEN_OTHER_1_IND = S.INIT_REGIMEN_OTHER_1_IND,
			D.INIT_REGIMEN_OTHER_1 = S.INIT_REGIMEN_OTHER_1,
			D.INIT_REGIMEN_OTHER_2_IND = S.INIT_REGIMEN_OTHER_2_IND,
			D.INIT_REGIMEN_OTHER_2 = S.INIT_REGIMEN_OTHER_2,
			D.ISOLATE_SUBMITTED_IND = S.ISOLATE_SUBMITTED_IND,
			D.ISOLATE_ACCESSION_NUM = S.ISOLATE_ACCESSION_NUM,
			D.INIT_SUSCEPT_TESTING_DONE = S.INIT_SUSCEPT_TESTING_DONE,
			D.FIRST_ISOLATE_COLLECT_DATE = S.FIRST_ISOLATE_COLLECT_DATE,
			D.FIRST_ISOLATE_IS_SPUTUM_IND = S.FIRST_ISOLATE_IS_SPUTUM_IND,
			D.FIRST_ISOLATE_NOT_SPUTUM = S.FIRST_ISOLATE_NOT_SPUTUM,
			D.INIT_SUSCEPT_ISONIAZID = S.INIT_SUSCEPT_ISONIAZID,
			D.INIT_SUSCEPT_RIFAMPIN = S.INIT_SUSCEPT_RIFAMPIN,
			D.INIT_SUSCEPT_PYRAZINAMIDE = S.INIT_SUSCEPT_PYRAZINAMIDE,
			D.INIT_SUSCEPT_ETHAMBUTOL = S.INIT_SUSCEPT_ETHAMBUTOL,
			D.INIT_SUSCEPT_STREPTOMYCIN = S.INIT_SUSCEPT_STREPTOMYCIN,
			D.INIT_SUSCEPT_ETHIONAMIDE = S.INIT_SUSCEPT_ETHIONAMIDE,
			D.INIT_SUSCEPT_KANAMYCIN = S.INIT_SUSCEPT_KANAMYCIN,
			D.INIT_SUSCEPT_CYCLOSERINE = S.INIT_SUSCEPT_CYCLOSERINE,
			D.INIT_SUSCEPT_CAPREOMYCIN = S.INIT_SUSCEPT_CAPREOMYCIN,
			D.INIT_SUSCEPT_PA_SALICYLIC_ACID = S.INIT_SUSCEPT_PA_SALICYLIC_ACID,
			D.INIT_SUSCEPT_AMIKACIN = S.INIT_SUSCEPT_AMIKACIN,
			D.INIT_SUSCEPT_RIFABUTIN = S.INIT_SUSCEPT_RIFABUTIN,
			D.INIT_SUSCEPT_CIPROFLOXACIN = S.INIT_SUSCEPT_CIPROFLOXACIN,
			D.INIT_SUSCEPT_OFLOXACIN = S.INIT_SUSCEPT_OFLOXACIN,
			D.INIT_SUSCEPT_RIFAPENTINE = S.INIT_SUSCEPT_RIFAPENTINE,
			D.INIT_SUSCEPT_LEVOFLOXACIN = S.INIT_SUSCEPT_LEVOFLOXACIN,
			D.INIT_SUSCEPT_MOXIFLOXACIN = S.INIT_SUSCEPT_MOXIFLOXACIN,
			D.INIT_SUSCEPT_OTHER_QUNINOLONES = S.INIT_SUSCEPT_OTHER_QUNINOLONES,
			D.INIT_SUSCEPT_OTHER_1_IND = S.INIT_SUSCEPT_OTHER_1_IND,
			D.INIT_SUSCEPT_OTHER_1 = S.INIT_SUSCEPT_OTHER_1,
			D.INIT_SUSCEPT_OTHER_2_IND = S.INIT_SUSCEPT_OTHER_2_IND,
			D.INIT_SUSCEPT_OTHER_2 = S.INIT_SUSCEPT_OTHER_2,
			D.SPUTUM_CULTURE_CONV_DOCUMENTED = S.SPUTUM_CULTURE_CONV_DOCUMENTED,
			D.TB_SPUTUM_CULTURE_NEGATIVE_DAT = S.TB_SPUTUM_CULTURE_NEGATIVE_DAT,
			D.NO_CONV_DOC_REASON = S.NO_CONV_DOC_REASON,
			D.NO_CONV_DOC_OTHER_REASON = S.NO_CONV_DOC_OTHER_REASON,
			D.MOVED_IND = S.MOVED_IND,
			D.TRANSNATIONAL_REFERRAL_IND = S.TRANSNATIONAL_REFERRAL_IND,
			D.MOVE_CITY = S.MOVE_CITY,
			D.THERAPY_STOP_DATE = S.THERAPY_STOP_DATE,
			D.THERAPY_STOP_REASON = S.THERAPY_STOP_REASON,
			D.THERAPY_STOP_CAUSE_OF_DEATH = S.THERAPY_STOP_CAUSE_OF_DEATH,
			D.THERAPY_EXTEND_GT_12_OTHER = S.THERAPY_EXTEND_GT_12_OTHER,
			D.DOT = S.DOT,
			D.DOT_NUMBER_WEEKS = S.DOT_NUMBER_WEEKS,
			D.FINAL_SUSCEPT_TESTING = S.FINAL_SUSCEPT_TESTING,
			D.FINAL_ISOLATE_COLLECT_DATE = S.FINAL_ISOLATE_COLLECT_DATE,	
			D.FINAL_ISOLATE_IS_SPUTUM_IND = S.FINAL_ISOLATE_IS_SPUTUM_IND,
			D.FINAL_ISOLATE_NOT_SPUTUM = S.FINAL_ISOLATE_NOT_SPUTUM,
			D.FINAL_SUSCEPT_ISONIAZID = S.FINAL_SUSCEPT_ISONIAZID,
			D.FINAL_SUSCEPT_RIFAMPIN = S.FINAL_SUSCEPT_RIFAMPIN,
			D.FINAL_SUSCEPT_PYRAZINAMIDE = S.FINAL_SUSCEPT_PYRAZINAMIDE,
			D.FINAL_SUSCEPT_ETHAMBUTOL = S.FINAL_SUSCEPT_ETHAMBUTOL,
			D.FINAL_SUSCEPT_STREPTOMYCIN = S.FINAL_SUSCEPT_STREPTOMYCIN,
			D.FINAL_SUSCEPT_ETHIONAMIDE = S.FINAL_SUSCEPT_ETHIONAMIDE,
			D.FINAL_SUSCEPT_KANAMYCIN = S.FINAL_SUSCEPT_KANAMYCIN,
			D.FINAL_SUSCEPT_CYCLOSERINE = S.FINAL_SUSCEPT_CYCLOSERINE,
			D.FINAL_SUSCEPT_CAPREOMYCIN = S.FINAL_SUSCEPT_CAPREOMYCIN,
			D.FINAL_SUSCEPT_PA_SALICYLIC_ACI = S.FINAL_SUSCEPT_PA_SALICYLIC_ACI,
			D.FINAL_SUSCEPT_AMIKACIN = S.FINAL_SUSCEPT_AMIKACIN,
			D.FINAL_SUSCEPT_RIFABUTIN = S.FINAL_SUSCEPT_RIFABUTIN,
			D.FINAL_SUSCEPT_CIPROFLOXACIN = S.FINAL_SUSCEPT_CIPROFLOXACIN,
			D.FINAL_SUSCEPT_OFLOXACIN = S.FINAL_SUSCEPT_OFLOXACIN,
			D.FINAL_SUSCEPT_RIFAPENTINE = S.FINAL_SUSCEPT_RIFAPENTINE,
			D.FINAL_SUSCEPT_LEVOFLOXACIN = S.FINAL_SUSCEPT_LEVOFLOXACIN,
			D.FINAL_SUSCEPT_MOXIFLOXACIN = S.FINAL_SUSCEPT_MOXIFLOXACIN,
			D.FINAL_SUSCEPT_OTHER_QUINOLONES = S.FINAL_SUSCEPT_OTHER_QUINOLONES,
			D.FINAL_SUSCEPT_OTHER_IND = S.FINAL_SUSCEPT_OTHER_IND,
			D.FINAL_SUSCEPT_OTHER = S.FINAL_SUSCEPT_OTHER,
			D.FINAL_SUSCEPT_OTHER_2_IND = S.FINAL_SUSCEPT_OTHER_2_IND,
			D.FINAL_SUSCEPT_OTHER_2 = S.FINAL_SUSCEPT_OTHER_2,
			D.CASE_VERIFICATION = S.CASE_VERIFICATION,
			D.COMMENTS_FOLLOW_UP_1 = S.COMMENTS_FOLLOW_UP_1,
			D.COMMENTS_FOLLOW_UP_2 = S.COMMENTS_FOLLOW_UP_2,
			D.MOVE_CITY_2 = S.MOVE_CITY_2,
			D.DATE_ARRIVED_IN_US = S.DATE_ARRIVED_IN_US,
			D.DATE_SUBMITTED = S.DATE_SUBMITTED,
			D.PATIENT_BIRTH_COUNTRY = S.PATIENT_BIRTH_COUNTRY,
			D.US_BORN_IND = S.US_BORN_IND,
			D.TB_VERCRIT_CALC_IND = S.TB_VERCRIT_CALC_IND,
			D.PROVIDER_OVERRIDE_COMMENTS = S.PROVIDER_OVERRIDE_COMMENTS,
			D.INIT_DRUG_REG_CALC = S.INIT_DRUG_REG_CALC,
			D.LAST_CHG_TIME = S.LAST_CHG_TIME
		FROM [dbo].D_TB_PAM D
		INNER JOIN #D_TB_PAM_E S ON D.D_TB_PAM_KEY = S.D_TB_PAM_KEY  AND D.TB_PAM_UID = S.TB_PAM_UID

		SELECT @RowCount_no = @@ROWCOUNT;

		IF
            @debug = 'true'
            SELECT @Proc_Step_Name AS step, *
            FROM #D_TB_PAM_E; 
			

		INSERT INTO [dbo].[job_flow_log]
        (batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'START', @Proc_Step_no, @Proc_Step_Name, @RowCount_no);
	
	COMMIT TRANSACTION;

	--LOG Step completed
	SET @Proc_Step_no = 999;
        SET @Proc_Step_Name = 'SP_COMPLETE';
        SELECT @ROWCOUNT_NO = 0;

        INSERT INTO [dbo].[job_flow_log] 
		(batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'COMPLETE', 999, @Proc_Step_name, @RowCount_no);

END TRY

BEGIN CATCH

	IF @@TRANCOUNT > 0   ROLLBACK TRANSACTION;

	-- Construct the error message string with all details:
        DECLARE @FullErrorMessage VARCHAR(8000) =
            'Error Number: ' + CAST(ERROR_NUMBER() AS VARCHAR(10)) + CHAR(13) + CHAR(10) +  -- Carriage return and line feed for new lines
            'Error Severity: ' + CAST(ERROR_SEVERITY() AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
            'Error State: ' + CAST(ERROR_STATE() AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
            'Error Line: ' + CAST(ERROR_LINE() AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
            'Error Message: ' + ERROR_MESSAGE();


        INSERT INTO [dbo].[job_flow_log] 
		(batch_id, [Dataflow_Name], [package_Name], [Status_Type], [step_number], [step_name], [Error_Description], [row_count])
        VALUES (@batch_id, @Dataflow_Name, @Package_Name, 'ERROR', @Proc_Step_no, @Proc_Step_name, @FullErrorMessage, 0);

	return -1 ;

END CATCH

END;
