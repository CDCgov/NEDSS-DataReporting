name: Build and push data-reporting-service image to ECR
on:
  push:
    branches:
      - main
      - master
      - rel-**
#       Uncomment the following line only to test the build deploy from private branches.
#      - CNDIT-*
#      - CNDE-*
    paths-ignore:
      - "docker-compose.yml"
      - "**.md"
jobs:
  sonar_scan:
    permissions:
      id-token: write
      contents: read
    name: Sonar Scan Analyze
    uses: ./.github/workflows/sonar.yaml
    secrets:
      PASSED_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
 
  # person-reporting-microservice
  call-build-person-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Person Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/person-reporting-service
      dockerfile_relative_path: -f ./person-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-person-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-person-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: person-reporting-service
      values_file_with_path: charts/person-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-person-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
 
  # organization-reporting-microservice
  call-build-organization-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Organization Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/organization-reporting-service
      dockerfile_relative_path: -f ./organization-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-organization-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-organization-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: organization-reporting-service
      values_file_with_path: charts/organization-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-organization-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
  
  # investigation-reporting-microservice
  call-build-investigation-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Investigation Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/investigation-reporting-service
      dockerfile_relative_path: -f ./investigation-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-investigation-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-investigation-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: investigation-reporting-service
      values_file_with_path: charts/investigation-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-investigation-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}
    
  # post-processing-reporting-microservice
  call-build-post-processing-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build post-processing Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/post-processing-reporting-service
      dockerfile_relative_path: -f ./post-processing-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-post-processing-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-post-processing-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: post-processing-reporting-service
      values_file_with_path: charts/post-processing-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-post-processing-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  # observation-reporting-microservice
  call-build-observation-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Observation Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/observation-reporting-service
      dockerfile_relative_path: -f ./observation-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-observation-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-observation-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: observation-reporting-service
      values_file_with_path: charts/observation-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-observation-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

 # LdfData-reporting-microservice
  call-build-ldfdata-reporting-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build LdfData Reporting Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: data-reporting-service/ldfdata-reporting-service
      dockerfile_relative_path: -f ./ldfdata-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  call-update-helm-for-ldfdata-reporting-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-ldfdata-reporting-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: ldfdata-reporting-service
      values_file_with_path: charts/ldfdata-reporting-service/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-ldfdata-reporting-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  # liquibase-microservice
  call-build-liquibase-microservice-container-workflow:
    permissions:
      id-token: write
      contents: read
      security-events: write
    name: Build Liquibase Service Container
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Build-gradle-microservice-container.yaml@main
    with:
      microservice_name: liquibase-service
      dockerfile_relative_path: -f ./liquibase-service/Dockerfile .
      environment_classifier: SNAPSHOT
      java_version: "21"
    secrets:
      CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID: ${{secrets.CDC_NBS_SANDBOX_SHARED_SERVICES_ACCOUNTID}}
      ECR_REPO_BASE_NAME: ${{secrets.ECR_NBS_REPO_BASE_NAME}}
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}

  # Helm Update Liquibase service
  call-update-helm-for-liquibase-microservice:
    permissions:
      id-token: write
      contents: write      
      pull-requests: write
    needs: call-build-liquibase-microservice-container-workflow
    uses: CDCgov/NEDSS-Workflows/.github/workflows/Update-helm-charts.yaml@main
    with:
      microservice_name: liquibase-service
      values_file_with_path: charts/liquibase/values-dts1.yaml
      new_image_tag: ${{ needs.call-build-liquibase-microservice-container-workflow.outputs.output_image_tag }}
    secrets:
      GIT_USER_EMAIL: ${{secrets.GIT_USER_EMAIL}}
      GIT_USER_NAME: ${{secrets.GIT_USER_NAME}}
      HELM_TOKEN: ${{secrets.HELM_TOKEN}}


