spring:
  kafka:
    input:
      topic-name: nbs_Observation
      topic-name-ar: nbs_Act_relationship
    output:
      topic-name-reporting: nrt_observation
      topic-name-coded: nrt_observation_coded
      topic-name-date: nrt_observation_date
      topic-name-edx: nrt_observation_edx
      topic-name-material: nrt_observation_material
      topic-name-numeric: nrt_observation_numeric
      topic-name-reason: nrt_observation_reason
      topic-name-txt: nrt_observation_txt
    dlq:
      retry-suffix: _retry
      dlq-suffix: _dlt

    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    group-id: ${KAFKA_CONSUMER_APP:observation-reporting-consumer-app}
    consumer:
        max-retry: 3
        maxPollIntervalMs: 30000
        maxPollRecs: 200
    admin:
      auto-create: true
  application:
    name: observation-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    url: ${DB_ODSE_URL:jdbc:sqlserver://localhost:1433;databaseName=:NBS_ODSE;encrypt=true;trustServerCertificate=true;}
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
server:
  port: '8094'

management:
  endpoint:
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true