spring:
  kafka:
    topic:
      investigation: nrt_investigation
      observation: nrt_observation
      organization: nrt_organization
      patient: nrt_patient
      provider: nrt_provider
      notification: nrt_investigation_notification
      treatment: nrt_treatment
      case_management: nrt_investigation_case_management
      interview: nrt_interview
      ldf_data: nrt_ldf_data
      place: nrt_place
      auth_user: nrt_auth_user
      contact_record: nrt_contact
      vaccination: nrt_vaccination
      page: nrt_odse_NBS_page
      datamart: nbs_Datamart
      state_defined_field_metadata: nrt_odse_state_defined_field_metadata
      condition: nrt_srte_Condition_code
    dlq:
      retry-suffix: -retry
      dlq-suffix: -dlt

    group-id: ${KAFKA_CONSUMER_APP:post-processing-reporting-consumer-app}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
    consumer:
      max-retry: 3
      maxPollIntervalMs: 30000
      maxConcurrency: 5
    admin:
      auto-create: true
  application:
    name: post-processing-reporting-service
  datasource:
    password: ${DB_PASSWORD:-fake.fake.fake.1234}
    username: ${DB_USERNAME:-sa}
    url: ${DB_RDB_URL:jdbc:sqlserver://localhost:1433;databaseName=:RDB;encrypt=true;trustServerCertificate=true;}
  jpa:
    properties:
      jakarta.persistence.query.timeout: -1
service:
  fixed-delay:
    cached-ids: ${FIXED_DELAY_ID:20000}
    datamart: ${FIXED_DELAY_DM:60000}
    backfill: ${FIXED_DELAY_BF:600000}
  max-retries: ${MAX_RETRIES:3}
server:
  port: '8095'

management:
  endpoint:
    prometheus:
      access: read_only
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true